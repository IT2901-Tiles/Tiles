{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nvar Module = require('module');\n\nmodule.exports = function (fromDir, moduleId) {\n  if (typeof fromDir !== 'string' || typeof moduleId !== 'string') {\n    throw new TypeError('Expected `fromDir` and `moduleId` to be a string');\n  }\n\n  fromDir = path.resolve(fromDir);\n  var fromFile = path.join(fromDir, 'noop.js');\n\n  try {\n    return Module._resolveFilename(moduleId, {\n      id: fromFile,\n      filename: fromFile,\n      paths: Module._nodeModulePaths(fromDir)\n    });\n  } catch (err) {\n    return null;\n  }\n};","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/require_optional/node_modules/resolve-from/index.js"],"names":["path","require","Module","module","exports","fromDir","moduleId","TypeError","resolve","fromFile","join","_resolveFilename","id","filename","paths","_nodeModulePaths","err"],"mappings":"AAAA;;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AAC7C,MAAI,OAAOD,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,QAAP,KAAoB,QAAvD,EAAiE;AAChE,UAAM,IAAIC,SAAJ,CAAc,kDAAd,CAAN;AACA;;AAEDF,EAAAA,OAAO,GAAGL,IAAI,CAACQ,OAAL,CAAaH,OAAb,CAAV;AAEA,MAAII,QAAQ,GAAGT,IAAI,CAACU,IAAL,CAAUL,OAAV,EAAmB,SAAnB,CAAf;;AAEA,MAAI;AACH,WAAOH,MAAM,CAACS,gBAAP,CAAwBL,QAAxB,EAAkC;AACxCM,MAAAA,EAAE,EAAEH,QADoC;AAExCI,MAAAA,QAAQ,EAAEJ,QAF8B;AAGxCK,MAAAA,KAAK,EAAEZ,MAAM,CAACa,gBAAP,CAAwBV,OAAxB;AAHiC,KAAlC,CAAP;AAKA,GAND,CAME,OAAOW,GAAP,EAAY;AACb,WAAO,IAAP;AACA;AACD,CAlBD","sourcesContent":["'use strict';\nvar path = require('path');\nvar Module = require('module');\n\nmodule.exports = function (fromDir, moduleId) {\n\tif (typeof fromDir !== 'string' || typeof moduleId !== 'string') {\n\t\tthrow new TypeError('Expected `fromDir` and `moduleId` to be a string');\n\t}\n\n\tfromDir = path.resolve(fromDir);\n\n\tvar fromFile = path.join(fromDir, 'noop.js');\n\n\ttry {\n\t\treturn Module._resolveFilename(moduleId, {\n\t\t\tid: fromFile,\n\t\t\tfilename: fromFile,\n\t\t\tpaths: Module._nodeModulePaths(fromDir)\n\t\t});\n\t} catch (err) {\n\t\treturn null;\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}