{"ast":null,"code":"'use strict';\n\nconst kWriteConcernKeys = new Set(['w', 'wtimeout', 'j', 'journal', 'fsync']);\n/**\n * The **WriteConcern** class is a class that represents a MongoDB WriteConcern.\n * @class\n * @property {(number|string)} w The write concern\n * @property {number} wtimeout The write concern timeout\n * @property {boolean} j The journal write concern\n * @property {boolean} fsync The file sync write concern\n * @see https://docs.mongodb.com/manual/reference/write-concern/index.html\n */\n\nclass WriteConcern {\n  /**\n   * Constructs a WriteConcern from the write concern properties.\n   * @param {(number|string)} [w] The write concern\n   * @param {number} [wtimeout] The write concern timeout\n   * @param {boolean} [j] The journal write concern\n   * @param {boolean} [fsync] The file sync write concern\n   */\n  constructor(w, wtimeout, j, fsync) {\n    if (w != null) {\n      this.w = w;\n    }\n\n    if (wtimeout != null) {\n      this.wtimeout = wtimeout;\n    }\n\n    if (j != null) {\n      this.j = j;\n    }\n\n    if (fsync != null) {\n      this.fsync = fsync;\n    }\n  }\n  /**\n   * Construct a WriteConcern given an options object.\n   *\n   * @param {object} [options] The options object from which to extract the write concern.\n   * @param {(number|string)} [options.w] **Deprecated** Use `options.writeConcern` instead\n   * @param {number} [options.wtimeout] **Deprecated** Use `options.writeConcern` instead\n   * @param {boolean} [options.j] **Deprecated** Use `options.writeConcern` instead\n   * @param {boolean} [options.fsync] **Deprecated** Use `options.writeConcern` instead\n   * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n   * @return {WriteConcern}\n   */\n\n\n  static fromOptions(options) {\n    if (options == null || options.writeConcern == null && options.w == null && options.wtimeout == null && options.j == null && options.journal == null && options.fsync == null) {\n      return;\n    }\n\n    if (options.writeConcern) {\n      if (typeof options.writeConcern === 'string') {\n        return new WriteConcern(options.writeConcern);\n      }\n\n      if (!Object.keys(options.writeConcern).some(key => kWriteConcernKeys.has(key))) {\n        return;\n      }\n\n      return new WriteConcern(options.writeConcern.w, options.writeConcern.wtimeout, options.writeConcern.j || options.writeConcern.journal, options.writeConcern.fsync);\n    }\n\n    console.warn(`Top-level use of w, wtimeout, j, and fsync is deprecated. Use writeConcern instead.`);\n    return new WriteConcern(options.w, options.wtimeout, options.j || options.journal, options.fsync);\n  }\n\n}\n\nmodule.exports = WriteConcern;","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/mongodb/lib/write_concern.js"],"names":["kWriteConcernKeys","Set","WriteConcern","constructor","w","wtimeout","j","fsync","fromOptions","options","writeConcern","journal","Object","keys","some","key","has","console","warn","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAD,EAAM,UAAN,EAAkB,GAAlB,EAAuB,SAAvB,EAAkC,OAAlC,CAAR,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAN,CAAmB;AACjB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAACC,CAAD,EAAIC,QAAJ,EAAcC,CAAd,EAAiBC,KAAjB,EAAwB;AACjC,QAAIH,CAAC,IAAI,IAAT,EAAe;AACb,WAAKA,CAAL,GAASA,CAAT;AACD;;AACD,QAAIC,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAKA,QAAL,GAAgBA,QAAhB;AACD;;AACD,QAAIC,CAAC,IAAI,IAAT,EAAe;AACb,WAAKA,CAAL,GAASA,CAAT;AACD;;AACD,QAAIC,KAAK,IAAI,IAAb,EAAmB;AACjB,WAAKA,KAAL,GAAaA,KAAb;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,SAAOC,WAAP,CAAmBC,OAAnB,EAA4B;AAC1B,QACEA,OAAO,IAAI,IAAX,IACCA,OAAO,CAACC,YAAR,IAAwB,IAAxB,IACCD,OAAO,CAACL,CAAR,IAAa,IADd,IAECK,OAAO,CAACJ,QAAR,IAAoB,IAFrB,IAGCI,OAAO,CAACH,CAAR,IAAa,IAHd,IAICG,OAAO,CAACE,OAAR,IAAmB,IAJpB,IAKCF,OAAO,CAACF,KAAR,IAAiB,IAPrB,EAQE;AACA;AACD;;AAED,QAAIE,OAAO,CAACC,YAAZ,EAA0B;AACxB,UAAI,OAAOD,OAAO,CAACC,YAAf,KAAgC,QAApC,EAA8C;AAC5C,eAAO,IAAIR,YAAJ,CAAiBO,OAAO,CAACC,YAAzB,CAAP;AACD;;AAED,UAAI,CAACE,MAAM,CAACC,IAAP,CAAYJ,OAAO,CAACC,YAApB,EAAkCI,IAAlC,CAAuCC,GAAG,IAAIf,iBAAiB,CAACgB,GAAlB,CAAsBD,GAAtB,CAA9C,CAAL,EAAgF;AAC9E;AACD;;AAED,aAAO,IAAIb,YAAJ,CACLO,OAAO,CAACC,YAAR,CAAqBN,CADhB,EAELK,OAAO,CAACC,YAAR,CAAqBL,QAFhB,EAGLI,OAAO,CAACC,YAAR,CAAqBJ,CAArB,IAA0BG,OAAO,CAACC,YAAR,CAAqBC,OAH1C,EAILF,OAAO,CAACC,YAAR,CAAqBH,KAJhB,CAAP;AAMD;;AAEDU,IAAAA,OAAO,CAACC,IAAR,CACG,qFADH;AAGA,WAAO,IAAIhB,YAAJ,CACLO,OAAO,CAACL,CADH,EAELK,OAAO,CAACJ,QAFH,EAGLI,OAAO,CAACH,CAAR,IAAaG,OAAO,CAACE,OAHhB,EAILF,OAAO,CAACF,KAJH,CAAP;AAMD;;AAzEgB;;AA4EnBY,MAAM,CAACC,OAAP,GAAiBlB,YAAjB","sourcesContent":["'use strict';\n\nconst kWriteConcernKeys = new Set(['w', 'wtimeout', 'j', 'journal', 'fsync']);\n\n/**\n * The **WriteConcern** class is a class that represents a MongoDB WriteConcern.\n * @class\n * @property {(number|string)} w The write concern\n * @property {number} wtimeout The write concern timeout\n * @property {boolean} j The journal write concern\n * @property {boolean} fsync The file sync write concern\n * @see https://docs.mongodb.com/manual/reference/write-concern/index.html\n */\nclass WriteConcern {\n  /**\n   * Constructs a WriteConcern from the write concern properties.\n   * @param {(number|string)} [w] The write concern\n   * @param {number} [wtimeout] The write concern timeout\n   * @param {boolean} [j] The journal write concern\n   * @param {boolean} [fsync] The file sync write concern\n   */\n  constructor(w, wtimeout, j, fsync) {\n    if (w != null) {\n      this.w = w;\n    }\n    if (wtimeout != null) {\n      this.wtimeout = wtimeout;\n    }\n    if (j != null) {\n      this.j = j;\n    }\n    if (fsync != null) {\n      this.fsync = fsync;\n    }\n  }\n\n  /**\n   * Construct a WriteConcern given an options object.\n   *\n   * @param {object} [options] The options object from which to extract the write concern.\n   * @param {(number|string)} [options.w] **Deprecated** Use `options.writeConcern` instead\n   * @param {number} [options.wtimeout] **Deprecated** Use `options.writeConcern` instead\n   * @param {boolean} [options.j] **Deprecated** Use `options.writeConcern` instead\n   * @param {boolean} [options.fsync] **Deprecated** Use `options.writeConcern` instead\n   * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n   * @return {WriteConcern}\n   */\n  static fromOptions(options) {\n    if (\n      options == null ||\n      (options.writeConcern == null &&\n        options.w == null &&\n        options.wtimeout == null &&\n        options.j == null &&\n        options.journal == null &&\n        options.fsync == null)\n    ) {\n      return;\n    }\n\n    if (options.writeConcern) {\n      if (typeof options.writeConcern === 'string') {\n        return new WriteConcern(options.writeConcern);\n      }\n\n      if (!Object.keys(options.writeConcern).some(key => kWriteConcernKeys.has(key))) {\n        return;\n      }\n\n      return new WriteConcern(\n        options.writeConcern.w,\n        options.writeConcern.wtimeout,\n        options.writeConcern.j || options.writeConcern.journal,\n        options.writeConcern.fsync\n      );\n    }\n\n    console.warn(\n      `Top-level use of w, wtimeout, j, and fsync is deprecated. Use writeConcern instead.`\n    );\n    return new WriteConcern(\n      options.w,\n      options.wtimeout,\n      options.j || options.journal,\n      options.fsync\n    );\n  }\n}\n\nmodule.exports = WriteConcern;\n"]},"metadata":{},"sourceType":"script"}