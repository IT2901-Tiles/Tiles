{"ast":null,"code":"'use strict';\n\nconst GetMore = require('../connection/commands').GetMore;\n\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\n\nconst MongoError = require('../error').MongoError;\n\nconst MongoNetworkError = require('../error').MongoNetworkError;\n\nconst BSON = retrieveBSON();\nconst Long = BSON.Long;\n\nconst collectionNamespace = require('./shared').collectionNamespace;\n\nconst maxWireVersion = require('../utils').maxWireVersion;\n\nconst applyCommonQueryOptions = require('./shared').applyCommonQueryOptions;\n\nconst command = require('./command');\n\nfunction getMore(server, ns, cursorState, batchSize, options, callback) {\n  options = options || {};\n  const wireVersion = maxWireVersion(server);\n\n  function queryCallback(err, result) {\n    if (err) return callback(err);\n    const response = result.message; // If we have a timed out query or a cursor that was killed\n\n    if (response.cursorNotFound) {\n      return callback(new MongoNetworkError('cursor killed or timed out'), null);\n    }\n\n    if (wireVersion < 4) {\n      const cursorId = typeof response.cursorId === 'number' ? Long.fromNumber(response.cursorId) : response.cursorId;\n      cursorState.documents = response.documents;\n      cursorState.cursorId = cursorId;\n      callback(null, null, response.connection);\n      return;\n    } // We have an error detected\n\n\n    if (response.documents[0].ok === 0) {\n      return callback(new MongoError(response.documents[0]));\n    } // Ensure we have a Long valid cursor id\n\n\n    const cursorId = typeof response.documents[0].cursor.id === 'number' ? Long.fromNumber(response.documents[0].cursor.id) : response.documents[0].cursor.id;\n    cursorState.documents = response.documents[0].cursor.nextBatch;\n    cursorState.cursorId = cursorId;\n    callback(null, response.documents[0], response.connection);\n  }\n\n  if (wireVersion < 4) {\n    const bson = server.s.bson;\n    const getMoreOp = new GetMore(bson, ns, cursorState.cursorId, {\n      numberToReturn: batchSize\n    });\n    const queryOptions = applyCommonQueryOptions({}, cursorState);\n    server.s.pool.write(getMoreOp, queryOptions, queryCallback);\n    return;\n  }\n\n  const cursorId = cursorState.cursorId instanceof Long ? cursorState.cursorId : Long.fromNumber(cursorState.cursorId);\n  const getMoreCmd = {\n    getMore: cursorId,\n    collection: collectionNamespace(ns),\n    batchSize: Math.abs(batchSize)\n  };\n\n  if (cursorState.cmd.tailable && typeof cursorState.cmd.maxAwaitTimeMS === 'number') {\n    getMoreCmd.maxTimeMS = cursorState.cmd.maxAwaitTimeMS;\n  }\n\n  const commandOptions = Object.assign({\n    returnFieldSelector: null,\n    documentsReturnedIn: 'nextBatch'\n  }, options);\n\n  if (cursorState.session) {\n    commandOptions.session = cursorState.session;\n  }\n\n  command(server, ns, getMoreCmd, commandOptions, queryCallback);\n}\n\nmodule.exports = getMore;","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/mongodb/lib/core/wireprotocol/get_more.js"],"names":["GetMore","require","retrieveBSON","MongoError","MongoNetworkError","BSON","Long","collectionNamespace","maxWireVersion","applyCommonQueryOptions","command","getMore","server","ns","cursorState","batchSize","options","callback","wireVersion","queryCallback","err","result","response","message","cursorNotFound","cursorId","fromNumber","documents","connection","ok","cursor","id","nextBatch","bson","s","getMoreOp","numberToReturn","queryOptions","pool","write","getMoreCmd","collection","Math","abs","cmd","tailable","maxAwaitTimeMS","maxTimeMS","commandOptions","Object","assign","returnFieldSelector","documentsReturnedIn","session","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst GetMore = require('../connection/commands').GetMore;\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst MongoError = require('../error').MongoError;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst BSON = retrieveBSON();\nconst Long = BSON.Long;\nconst collectionNamespace = require('./shared').collectionNamespace;\nconst maxWireVersion = require('../utils').maxWireVersion;\nconst applyCommonQueryOptions = require('./shared').applyCommonQueryOptions;\nconst command = require('./command');\n\nfunction getMore(server, ns, cursorState, batchSize, options, callback) {\n  options = options || {};\n\n  const wireVersion = maxWireVersion(server);\n  function queryCallback(err, result) {\n    if (err) return callback(err);\n    const response = result.message;\n\n    // If we have a timed out query or a cursor that was killed\n    if (response.cursorNotFound) {\n      return callback(new MongoNetworkError('cursor killed or timed out'), null);\n    }\n\n    if (wireVersion < 4) {\n      const cursorId =\n        typeof response.cursorId === 'number'\n          ? Long.fromNumber(response.cursorId)\n          : response.cursorId;\n\n      cursorState.documents = response.documents;\n      cursorState.cursorId = cursorId;\n\n      callback(null, null, response.connection);\n      return;\n    }\n\n    // We have an error detected\n    if (response.documents[0].ok === 0) {\n      return callback(new MongoError(response.documents[0]));\n    }\n\n    // Ensure we have a Long valid cursor id\n    const cursorId =\n      typeof response.documents[0].cursor.id === 'number'\n        ? Long.fromNumber(response.documents[0].cursor.id)\n        : response.documents[0].cursor.id;\n\n    cursorState.documents = response.documents[0].cursor.nextBatch;\n    cursorState.cursorId = cursorId;\n\n    callback(null, response.documents[0], response.connection);\n  }\n\n  if (wireVersion < 4) {\n    const bson = server.s.bson;\n    const getMoreOp = new GetMore(bson, ns, cursorState.cursorId, { numberToReturn: batchSize });\n    const queryOptions = applyCommonQueryOptions({}, cursorState);\n    server.s.pool.write(getMoreOp, queryOptions, queryCallback);\n    return;\n  }\n\n  const cursorId =\n    cursorState.cursorId instanceof Long\n      ? cursorState.cursorId\n      : Long.fromNumber(cursorState.cursorId);\n\n  const getMoreCmd = {\n    getMore: cursorId,\n    collection: collectionNamespace(ns),\n    batchSize: Math.abs(batchSize)\n  };\n\n  if (cursorState.cmd.tailable && typeof cursorState.cmd.maxAwaitTimeMS === 'number') {\n    getMoreCmd.maxTimeMS = cursorState.cmd.maxAwaitTimeMS;\n  }\n\n  const commandOptions = Object.assign(\n    {\n      returnFieldSelector: null,\n      documentsReturnedIn: 'nextBatch'\n    },\n    options\n  );\n\n  if (cursorState.session) {\n    commandOptions.session = cursorState.session;\n  }\n\n  command(server, ns, getMoreCmd, commandOptions, queryCallback);\n}\n\nmodule.exports = getMore;\n"]},"metadata":{},"sourceType":"script"}