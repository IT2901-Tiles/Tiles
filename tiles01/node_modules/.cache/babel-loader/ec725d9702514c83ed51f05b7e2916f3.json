{"ast":null,"code":"'use strict';\n\nvar DuplexStream = require('readable-stream').Duplex,\n    util = require('util'),\n    Buffer = require('safe-buffer').Buffer;\n\nfunction BufferList(callback) {\n  if (!(this instanceof BufferList)) return new BufferList(callback);\n  this._bufs = [];\n  this.length = 0;\n\n  if (typeof callback == 'function') {\n    this._callback = callback;\n\n    var piper = function piper(err) {\n      if (this._callback) {\n        this._callback(err);\n\n        this._callback = null;\n      }\n    }.bind(this);\n\n    this.on('pipe', function onPipe(src) {\n      src.on('error', piper);\n    });\n    this.on('unpipe', function onUnpipe(src) {\n      src.removeListener('error', piper);\n    });\n  } else {\n    this.append(callback);\n  }\n\n  DuplexStream.call(this);\n}\n\nutil.inherits(BufferList, DuplexStream);\n\nBufferList.prototype._offset = function _offset(offset) {\n  var tot = 0,\n      i = 0,\n      _t;\n\n  if (offset === 0) return [0, 0];\n\n  for (; i < this._bufs.length; i++) {\n    _t = tot + this._bufs[i].length;\n\n    if (offset < _t || i == this._bufs.length - 1) {\n      return [i, offset - tot];\n    }\n\n    tot = _t;\n  }\n};\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  var bufferId = blOffset[0];\n  var offset = blOffset[1];\n\n  for (var i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length;\n  }\n\n  return offset;\n};\n\nBufferList.prototype.append = function append(buf) {\n  var i = 0;\n\n  if (Buffer.isBuffer(buf)) {\n    this._appendBuffer(buf);\n  } else if (Array.isArray(buf)) {\n    for (; i < buf.length; i++) this.append(buf[i]);\n  } else if (buf instanceof BufferList) {\n    // unwrap argument into individual BufferLists\n    for (; i < buf._bufs.length; i++) this.append(buf._bufs[i]);\n  } else if (buf != null) {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf == 'number') buf = buf.toString();\n\n    this._appendBuffer(Buffer.from(buf));\n  }\n\n  return this;\n};\n\nBufferList.prototype._appendBuffer = function appendBuffer(buf) {\n  this._bufs.push(buf);\n\n  this.length += buf.length;\n};\n\nBufferList.prototype._write = function _write(buf, encoding, callback) {\n  this._appendBuffer(buf);\n\n  if (typeof callback == 'function') callback();\n};\n\nBufferList.prototype._read = function _read(size) {\n  if (!this.length) return this.push(null);\n  size = Math.min(size, this.length);\n  this.push(this.slice(0, size));\n  this.consume(size);\n};\n\nBufferList.prototype.end = function end(chunk) {\n  DuplexStream.prototype.end.call(this, chunk);\n\n  if (this._callback) {\n    this._callback(null, this.slice());\n\n    this._callback = null;\n  }\n};\n\nBufferList.prototype.get = function get(index) {\n  if (index > this.length || index < 0) {\n    return undefined;\n  }\n\n  var offset = this._offset(index);\n\n  return this._bufs[offset[0]][offset[1]];\n};\n\nBufferList.prototype.slice = function slice(start, end) {\n  if (typeof start == 'number' && start < 0) start += this.length;\n  if (typeof end == 'number' && end < 0) end += this.length;\n  return this.copy(null, 0, start, end);\n};\n\nBufferList.prototype.copy = function copy(dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart != 'number' || srcStart < 0) srcStart = 0;\n  if (typeof srcEnd != 'number' || srcEnd > this.length) srcEnd = this.length;\n  if (srcStart >= this.length) return dst || Buffer.alloc(0);\n  if (srcEnd <= 0) return dst || Buffer.alloc(0);\n\n  var copy = !!dst,\n      off = this._offset(srcStart),\n      len = srcEnd - srcStart,\n      bytes = len,\n      bufoff = copy && dstStart || 0,\n      start = off[1],\n      l,\n      i; // copy/slice everything\n\n\n  if (srcStart === 0 && srcEnd == this.length) {\n    if (!copy) {\n      // slice, but full concat if multiple buffers\n      return this._bufs.length === 1 ? this._bufs[0] : Buffer.concat(this._bufs, this.length);\n    } // copy, need to copy individual buffers\n\n\n    for (i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff);\n\n      bufoff += this._bufs[i].length;\n    }\n\n    return dst;\n  } // easy, cheap case where it's a subset of one of the buffers\n\n\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes) : this._bufs[off[0]].slice(start, start + bytes);\n  }\n\n  if (!copy) // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len);\n\n  for (i = off[0]; i < this._bufs.length; i++) {\n    l = this._bufs[i].length - start;\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start);\n\n      bufoff += l;\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes);\n\n      bufoff += l;\n      break;\n    }\n\n    bytes -= l;\n    if (start) start = 0;\n  } // safeguard so that we don't return uninitialized memory\n\n\n  if (dst.length > bufoff) return dst.slice(0, bufoff);\n  return dst;\n};\n\nBufferList.prototype.shallowSlice = function shallowSlice(start, end) {\n  start = start || 0;\n  end = typeof end !== 'number' ? this.length : end;\n  if (start < 0) start += this.length;\n  if (end < 0) end += this.length;\n\n  if (start === end) {\n    return new BufferList();\n  }\n\n  var startOffset = this._offset(start),\n      endOffset = this._offset(end),\n      buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1);\n\n  if (endOffset[1] == 0) buffers.pop();else buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1]);\n  if (startOffset[1] != 0) buffers[0] = buffers[0].slice(startOffset[1]);\n  return new BufferList(buffers);\n};\n\nBufferList.prototype.toString = function toString(encoding, start, end) {\n  return this.slice(start, end).toString(encoding);\n};\n\nBufferList.prototype.consume = function consume(bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes); // do nothing if not a positive number\n\n  if (Number.isNaN(bytes) || bytes <= 0) return this;\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length;\n      this.length -= this._bufs[0].length;\n\n      this._bufs.shift();\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes);\n      this.length -= bytes;\n      break;\n    }\n  }\n\n  return this;\n};\n\nBufferList.prototype.duplicate = function duplicate() {\n  var i = 0,\n      copy = new BufferList();\n\n  for (; i < this._bufs.length; i++) copy.append(this._bufs[i]);\n\n  return copy;\n};\n\nBufferList.prototype.destroy = function destroy() {\n  this._bufs.length = 0;\n  this.length = 0;\n  this.push(null);\n};\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset;\n    offset = undefined;\n  }\n\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.');\n  } else if (typeof search === 'number') {\n    search = Buffer.from([search]);\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding);\n  } else if (search instanceof BufferList) {\n    search = search.slice();\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search);\n  }\n\n  offset = Number(offset || 0);\n\n  if (isNaN(offset)) {\n    offset = 0;\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset;\n  }\n\n  if (offset < 0) {\n    offset = 0;\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset;\n  }\n\n  var blOffset = this._offset(offset);\n\n  var blIndex = blOffset[0]; // index of which internal buffer we're working on\n\n  var buffOffset = blOffset[1]; // offset of the internal buffer we're working on\n  // scan over each buffer\n\n  for (blIndex; blIndex < this._bufs.length; blIndex++) {\n    var buff = this._bufs[blIndex];\n\n    while (buffOffset < buff.length) {\n      var availableWindow = buff.length - buffOffset;\n\n      if (availableWindow >= search.length) {\n        var nativeSearchResult = buff.indexOf(search, buffOffset);\n\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult]);\n        }\n\n        buffOffset = buff.length - search.length + 1; // end of native search window\n      } else {\n        var revOffset = this._reverseOffset([blIndex, buffOffset]);\n\n        if (this._match(revOffset, search)) {\n          return revOffset;\n        }\n\n        buffOffset++;\n      }\n    }\n\n    buffOffset = 0;\n  }\n\n  return -1;\n};\n\nBufferList.prototype._match = function (offset, search) {\n  if (this.length - offset < search.length) {\n    return false;\n  }\n\n  for (var searchOffset = 0; searchOffset < search.length; searchOffset++) {\n    if (this.get(offset + searchOffset) !== search[searchOffset]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n(function () {\n  var methods = {\n    'readDoubleBE': 8,\n    'readDoubleLE': 8,\n    'readFloatBE': 4,\n    'readFloatLE': 4,\n    'readInt32BE': 4,\n    'readInt32LE': 4,\n    'readUInt32BE': 4,\n    'readUInt32LE': 4,\n    'readInt16BE': 2,\n    'readInt16LE': 2,\n    'readUInt16BE': 2,\n    'readUInt16LE': 2,\n    'readInt8': 1,\n    'readUInt8': 1,\n    'readIntBE': null,\n    'readIntLE': null,\n    'readUIntBE': null,\n    'readUIntLE': null\n  };\n\n  for (var m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength);\n        };\n      } else {\n        BufferList.prototype[m] = function (offset) {\n          return this.slice(offset, offset + methods[m])[m](0);\n        };\n      }\n    })(m);\n  }\n})();\n\nmodule.exports = BufferList;","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/bl/bl.js"],"names":["DuplexStream","require","Duplex","util","Buffer","BufferList","callback","_bufs","length","_callback","piper","err","bind","on","onPipe","src","onUnpipe","removeListener","append","call","inherits","prototype","_offset","offset","tot","i","_t","_reverseOffset","blOffset","bufferId","buf","isBuffer","_appendBuffer","Array","isArray","toString","from","appendBuffer","push","_write","encoding","_read","size","Math","min","slice","consume","end","chunk","get","index","undefined","start","copy","dst","dstStart","srcStart","srcEnd","alloc","off","len","bytes","bufoff","l","concat","allocUnsafe","shallowSlice","startOffset","endOffset","buffers","pop","trunc","Number","isNaN","shift","duplicate","destroy","indexOf","search","TypeError","blIndex","buffOffset","buff","availableWindow","nativeSearchResult","revOffset","_match","searchOffset","methods","m","byteLength","module","exports"],"mappings":"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","sourcesContent":["'use strict'\nvar DuplexStream = require('readable-stream').Duplex\n  , util         = require('util')\n  , Buffer       = require('safe-buffer').Buffer\n\nfunction BufferList (callback) {\n  if (!(this instanceof BufferList))\n    return new BufferList(callback)\n\n  this._bufs  = []\n  this.length = 0\n\n  if (typeof callback == 'function') {\n    this._callback = callback\n\n    var piper = function piper (err) {\n      if (this._callback) {\n        this._callback(err)\n        this._callback = null\n      }\n    }.bind(this)\n\n    this.on('pipe', function onPipe (src) {\n      src.on('error', piper)\n    })\n    this.on('unpipe', function onUnpipe (src) {\n      src.removeListener('error', piper)\n    })\n  } else {\n    this.append(callback)\n  }\n\n  DuplexStream.call(this)\n}\n\n\nutil.inherits(BufferList, DuplexStream)\n\n\nBufferList.prototype._offset = function _offset (offset) {\n  var tot = 0, i = 0, _t\n  if (offset === 0) return [ 0, 0 ]\n  for (; i < this._bufs.length; i++) {\n    _t = tot + this._bufs[i].length\n    if (offset < _t || i == this._bufs.length - 1) {\n      return [ i, offset - tot ]\n    }\n    tot = _t\n  }\n}\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  var bufferId = blOffset[0]\n  var offset = blOffset[1]\n  for (var i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length\n  }\n  return offset\n}\n\nBufferList.prototype.append = function append (buf) {\n  var i = 0\n\n  if (Buffer.isBuffer(buf)) {\n    this._appendBuffer(buf)\n  } else if (Array.isArray(buf)) {\n    for (; i < buf.length; i++)\n      this.append(buf[i])\n  } else if (buf instanceof BufferList) {\n    // unwrap argument into individual BufferLists\n    for (; i < buf._bufs.length; i++)\n      this.append(buf._bufs[i])\n  } else if (buf != null) {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf == 'number')\n      buf = buf.toString()\n\n    this._appendBuffer(Buffer.from(buf))\n  }\n\n  return this\n}\n\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\n\nBufferList.prototype._write = function _write (buf, encoding, callback) {\n  this._appendBuffer(buf)\n\n  if (typeof callback == 'function')\n    callback()\n}\n\n\nBufferList.prototype._read = function _read (size) {\n  if (!this.length)\n    return this.push(null)\n\n  size = Math.min(size, this.length)\n  this.push(this.slice(0, size))\n  this.consume(size)\n}\n\n\nBufferList.prototype.end = function end (chunk) {\n  DuplexStream.prototype.end.call(this, chunk)\n\n  if (this._callback) {\n    this._callback(null, this.slice())\n    this._callback = null\n  }\n}\n\n\nBufferList.prototype.get = function get (index) {\n  if (index > this.length || index < 0) {\n    return undefined\n  }\n  var offset = this._offset(index)\n  return this._bufs[offset[0]][offset[1]]\n}\n\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start == 'number' && start < 0)\n    start += this.length\n  if (typeof end == 'number' && end < 0)\n    end += this.length\n  return this.copy(null, 0, start, end)\n}\n\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart != 'number' || srcStart < 0)\n    srcStart = 0\n  if (typeof srcEnd != 'number' || srcEnd > this.length)\n    srcEnd = this.length\n  if (srcStart >= this.length)\n    return dst || Buffer.alloc(0)\n  if (srcEnd <= 0)\n    return dst || Buffer.alloc(0)\n\n  var copy   = !!dst\n    , off    = this._offset(srcStart)\n    , len    = srcEnd - srcStart\n    , bytes  = len\n    , bufoff = (copy && dstStart) || 0\n    , start  = off[1]\n    , l\n    , i\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd == this.length) {\n    if (!copy) { // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n\n  for (i = off[0]; i < this._bufs.length; i++) {\n    l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n      bufoff += l\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      bufoff += l\n      break\n    }\n\n    bytes -= l\n\n    if (start)\n      start = 0\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = typeof end !== 'number' ? this.length : end\n\n  if (start < 0)\n    start += this.length\n  if (end < 0)\n    end += this.length\n\n  if (start === end) {\n    return new BufferList()\n  }\n  var startOffset = this._offset(start)\n    , endOffset = this._offset(end)\n    , buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] == 0)\n    buffers.pop()\n  else\n    buffers[buffers.length-1] = buffers[buffers.length-1].slice(0, endOffset[1])\n\n  if (startOffset[1] != 0)\n    buffers[0] = buffers[0].slice(startOffset[1])\n\n  return new BufferList(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes)\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n  return this\n}\n\n\nBufferList.prototype.duplicate = function duplicate () {\n  var i = 0\n    , copy = new BufferList()\n\n  for (; i < this._bufs.length; i++)\n    copy.append(this._bufs[i])\n\n  return copy\n}\n\n\nBufferList.prototype.destroy = function destroy () {\n  this._bufs.length = 0\n  this.length = 0\n  this.push(null)\n}\n\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n  }\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.')\n  } else if (typeof search === 'number') {\n      search = Buffer.from([search])\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding)\n  } else if (search instanceof BufferList) {\n    search = search.slice()\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search)\n  }\n\n  offset = Number(offset || 0)\n  if (isNaN(offset)) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset\n  }\n\n  var blOffset = this._offset(offset)\n  var blIndex = blOffset[0] // index of which internal buffer we're working on\n  var buffOffset = blOffset[1] // offset of the internal buffer we're working on\n\n  // scan over each buffer\n  for (blIndex; blIndex < this._bufs.length; blIndex++) {\n    var buff = this._bufs[blIndex]\n    while(buffOffset < buff.length) {\n      var availableWindow = buff.length - buffOffset\n      if (availableWindow >= search.length) {\n        var nativeSearchResult = buff.indexOf(search, buffOffset)\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult])\n        }\n        buffOffset = buff.length - search.length + 1 // end of native search window\n      } else {\n        var revOffset = this._reverseOffset([blIndex, buffOffset])\n        if (this._match(revOffset, search)) {\n          return revOffset\n        }\n        buffOffset++\n      }\n    }\n    buffOffset = 0\n  }\n  return -1\n}\n\nBufferList.prototype._match = function(offset, search) {\n  if (this.length - offset < search.length) {\n    return false\n  }\n  for (var searchOffset = 0; searchOffset < search.length ; searchOffset++) {\n    if(this.get(offset + searchOffset) !== search[searchOffset]){\n      return false\n    }\n  }\n  return true\n}\n\n\n;(function () {\n  var methods = {\n      'readDoubleBE' : 8\n    , 'readDoubleLE' : 8\n    , 'readFloatBE'  : 4\n    , 'readFloatLE'  : 4\n    , 'readInt32BE'  : 4\n    , 'readInt32LE'  : 4\n    , 'readUInt32BE' : 4\n    , 'readUInt32LE' : 4\n    , 'readInt16BE'  : 2\n    , 'readInt16LE'  : 2\n    , 'readUInt16BE' : 2\n    , 'readUInt16LE' : 2\n    , 'readInt8'     : 1\n    , 'readUInt8'    : 1\n    , 'readIntBE'    : null\n    , 'readIntLE'    : null\n    , 'readUIntBE'   : null\n    , 'readUIntLE'   : null\n  }\n\n  for (var m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength)\n        }\n      }\n      else {\n        BufferList.prototype[m] = function (offset) {\n          return this.slice(offset, offset + methods[m])[m](0)\n        }\n      }\n    }(m))\n  }\n}())\n\n\nmodule.exports = BufferList\n"]},"metadata":{},"sourceType":"script"}