{"ast":null,"code":"'use strict';\n\nconst CommandOperation = require('./command');\n\nclass ProfilingLevelOperation extends CommandOperation {\n  constructor(db, command, options) {\n    super(db, options);\n  }\n\n  _buildCommand() {\n    const command = {\n      profile: -1\n    };\n    return command;\n  }\n\n  execute(callback) {\n    super.execute((err, doc) => {\n      if (err == null && doc.ok === 1) {\n        const was = doc.was;\n        if (was === 0) return callback(null, 'off');\n        if (was === 1) return callback(null, 'slow_only');\n        if (was === 2) return callback(null, 'all');\n        return callback(new Error('Error: illegal profiling level value ' + was), null);\n      } else {\n        err != null ? callback(err, null) : callback(new Error('Error with profile command'), null);\n      }\n    });\n  }\n\n}\n\nmodule.exports = ProfilingLevelOperation;","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/mongodb/lib/operations/profiling_level.js"],"names":["CommandOperation","require","ProfilingLevelOperation","constructor","db","command","options","_buildCommand","profile","execute","callback","err","doc","ok","was","Error","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,WAAD,CAAhC;;AAEA,MAAMC,uBAAN,SAAsCF,gBAAtC,CAAuD;AACrDG,EAAAA,WAAW,CAACC,EAAD,EAAKC,OAAL,EAAcC,OAAd,EAAuB;AAChC,UAAMF,EAAN,EAAUE,OAAV;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,UAAMF,OAAO,GAAG;AAAEG,MAAAA,OAAO,EAAE,CAAC;AAAZ,KAAhB;AAEA,WAAOH,OAAP;AACD;;AAEDI,EAAAA,OAAO,CAACC,QAAD,EAAW;AAChB,UAAMD,OAAN,CAAc,CAACE,GAAD,EAAMC,GAAN,KAAc;AAC1B,UAAID,GAAG,IAAI,IAAP,IAAeC,GAAG,CAACC,EAAJ,KAAW,CAA9B,EAAiC;AAC/B,cAAMC,GAAG,GAAGF,GAAG,CAACE,GAAhB;AACA,YAAIA,GAAG,KAAK,CAAZ,EAAe,OAAOJ,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAf;AACf,YAAII,GAAG,KAAK,CAAZ,EAAe,OAAOJ,QAAQ,CAAC,IAAD,EAAO,WAAP,CAAf;AACf,YAAII,GAAG,KAAK,CAAZ,EAAe,OAAOJ,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAf;AACf,eAAOA,QAAQ,CAAC,IAAIK,KAAJ,CAAU,0CAA0CD,GAApD,CAAD,EAA2D,IAA3D,CAAf;AACD,OAND,MAMO;AACLH,QAAAA,GAAG,IAAI,IAAP,GAAcD,QAAQ,CAACC,GAAD,EAAM,IAAN,CAAtB,GAAoCD,QAAQ,CAAC,IAAIK,KAAJ,CAAU,4BAAV,CAAD,EAA0C,IAA1C,CAA5C;AACD;AACF,KAVD;AAWD;;AAvBoD;;AA0BvDC,MAAM,CAACC,OAAP,GAAiBf,uBAAjB","sourcesContent":["'use strict';\n\nconst CommandOperation = require('./command');\n\nclass ProfilingLevelOperation extends CommandOperation {\n  constructor(db, command, options) {\n    super(db, options);\n  }\n\n  _buildCommand() {\n    const command = { profile: -1 };\n\n    return command;\n  }\n\n  execute(callback) {\n    super.execute((err, doc) => {\n      if (err == null && doc.ok === 1) {\n        const was = doc.was;\n        if (was === 0) return callback(null, 'off');\n        if (was === 1) return callback(null, 'slow_only');\n        if (was === 2) return callback(null, 'all');\n        return callback(new Error('Error: illegal profiling level value ' + was), null);\n      } else {\n        err != null ? callback(err, null) : callback(new Error('Error with profile command'), null);\n      }\n    });\n  }\n}\n\nmodule.exports = ProfilingLevelOperation;\n"]},"metadata":{},"sourceType":"script"}