{"ast":null,"code":"'use strict';\n\nconst AuthProvider = require('./auth_provider').AuthProvider;\n\nclass X509 extends AuthProvider {\n  prepare(handshakeDoc, authContext, callback) {\n    const credentials = authContext.credentials;\n    Object.assign(handshakeDoc, {\n      speculativeAuthenticate: x509AuthenticateCommand(credentials)\n    });\n    callback(undefined, handshakeDoc);\n  }\n\n  auth(authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    const response = authContext.response;\n\n    if (response.speculativeAuthenticate) {\n      return callback();\n    }\n\n    connection.command('$external.$cmd', x509AuthenticateCommand(credentials), callback);\n  }\n\n}\n\nfunction x509AuthenticateCommand(credentials) {\n  const command = {\n    authenticate: 1,\n    mechanism: 'MONGODB-X509'\n  };\n\n  if (credentials.username) {\n    Object.assign(command, {\n      user: credentials.username\n    });\n  }\n\n  return command;\n}\n\nmodule.exports = X509;","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/mongodb/lib/core/auth/x509.js"],"names":["AuthProvider","require","X509","prepare","handshakeDoc","authContext","callback","credentials","Object","assign","speculativeAuthenticate","x509AuthenticateCommand","undefined","auth","connection","response","command","authenticate","mechanism","username","user","module","exports"],"mappings":"AAAA;;AACA,MAAMA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,YAAhD;;AAEA,MAAME,IAAN,SAAmBF,YAAnB,CAAgC;AAC9BG,EAAAA,OAAO,CAACC,YAAD,EAAeC,WAAf,EAA4BC,QAA5B,EAAsC;AAC3C,UAAMC,WAAW,GAAGF,WAAW,CAACE,WAAhC;AACAC,IAAAA,MAAM,CAACC,MAAP,CAAcL,YAAd,EAA4B;AAC1BM,MAAAA,uBAAuB,EAAEC,uBAAuB,CAACJ,WAAD;AADtB,KAA5B;AAIAD,IAAAA,QAAQ,CAACM,SAAD,EAAYR,YAAZ,CAAR;AACD;;AAEDS,EAAAA,IAAI,CAACR,WAAD,EAAcC,QAAd,EAAwB;AAC1B,UAAMQ,UAAU,GAAGT,WAAW,CAACS,UAA/B;AACA,UAAMP,WAAW,GAAGF,WAAW,CAACE,WAAhC;AACA,UAAMQ,QAAQ,GAAGV,WAAW,CAACU,QAA7B;;AACA,QAAIA,QAAQ,CAACL,uBAAb,EAAsC;AACpC,aAAOJ,QAAQ,EAAf;AACD;;AAEDQ,IAAAA,UAAU,CAACE,OAAX,CAAmB,gBAAnB,EAAqCL,uBAAuB,CAACJ,WAAD,CAA5D,EAA2ED,QAA3E;AACD;;AAnB6B;;AAsBhC,SAASK,uBAAT,CAAiCJ,WAAjC,EAA8C;AAC5C,QAAMS,OAAO,GAAG;AAAEC,IAAAA,YAAY,EAAE,CAAhB;AAAmBC,IAAAA,SAAS,EAAE;AAA9B,GAAhB;;AACA,MAAIX,WAAW,CAACY,QAAhB,EAA0B;AACxBX,IAAAA,MAAM,CAACC,MAAP,CAAcO,OAAd,EAAuB;AAAEI,MAAAA,IAAI,EAAEb,WAAW,CAACY;AAApB,KAAvB;AACD;;AAED,SAAOH,OAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBpB,IAAjB","sourcesContent":["'use strict';\nconst AuthProvider = require('./auth_provider').AuthProvider;\n\nclass X509 extends AuthProvider {\n  prepare(handshakeDoc, authContext, callback) {\n    const credentials = authContext.credentials;\n    Object.assign(handshakeDoc, {\n      speculativeAuthenticate: x509AuthenticateCommand(credentials)\n    });\n\n    callback(undefined, handshakeDoc);\n  }\n\n  auth(authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    const response = authContext.response;\n    if (response.speculativeAuthenticate) {\n      return callback();\n    }\n\n    connection.command('$external.$cmd', x509AuthenticateCommand(credentials), callback);\n  }\n}\n\nfunction x509AuthenticateCommand(credentials) {\n  const command = { authenticate: 1, mechanism: 'MONGODB-X509' };\n  if (credentials.username) {\n    Object.assign(command, { user: credentials.username });\n  }\n\n  return command;\n}\n\nmodule.exports = X509;\n"]},"metadata":{},"sourceType":"script"}