{"ast":null,"code":"'use strict';\n\nconst CommandOperationV2 = require('./command_v2');\n\nconst Aspect = require('./operation').Aspect;\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst MongoDBNamespace = require('../utils').MongoDBNamespace;\n\nclass ListDatabasesOperation extends CommandOperationV2 {\n  constructor(db, options) {\n    super(db, options);\n    this.ns = new MongoDBNamespace('admin', '$cmd');\n  }\n\n  execute(server, callback) {\n    const cmd = {\n      listDatabases: 1\n    };\n\n    if (this.options.nameOnly) {\n      cmd.nameOnly = Number(cmd.nameOnly);\n    }\n\n    if (this.options.filter) {\n      cmd.filter = this.options.filter;\n    }\n\n    if (typeof this.options.authorizedDatabases === 'boolean') {\n      cmd.authorizedDatabases = this.options.authorizedDatabases;\n    }\n\n    super.executeCommand(server, cmd, callback);\n  }\n\n}\n\ndefineAspects(ListDatabasesOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXECUTE_WITH_SELECTION]);\nmodule.exports = ListDatabasesOperation;","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/mongodb/lib/operations/list_databases.js"],"names":["CommandOperationV2","require","Aspect","defineAspects","MongoDBNamespace","ListDatabasesOperation","constructor","db","options","ns","execute","server","callback","cmd","listDatabases","nameOnly","Number","filter","authorizedDatabases","executeCommand","READ_OPERATION","RETRYABLE","EXECUTE_WITH_SELECTION","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,cAAD,CAAlC;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,MAAtC;;AACA,MAAMC,aAAa,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBE,aAA7C;;AACA,MAAMC,gBAAgB,GAAGH,OAAO,CAAC,UAAD,CAAP,CAAoBG,gBAA7C;;AAEA,MAAMC,sBAAN,SAAqCL,kBAArC,CAAwD;AACtDM,EAAAA,WAAW,CAACC,EAAD,EAAKC,OAAL,EAAc;AACvB,UAAMD,EAAN,EAAUC,OAAV;AACA,SAAKC,EAAL,GAAU,IAAIL,gBAAJ,CAAqB,OAArB,EAA8B,MAA9B,CAAV;AACD;;AAEDM,EAAAA,OAAO,CAACC,MAAD,EAASC,QAAT,EAAmB;AACxB,UAAMC,GAAG,GAAG;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAZ;;AACA,QAAI,KAAKN,OAAL,CAAaO,QAAjB,EAA2B;AACzBF,MAAAA,GAAG,CAACE,QAAJ,GAAeC,MAAM,CAACH,GAAG,CAACE,QAAL,CAArB;AACD;;AAED,QAAI,KAAKP,OAAL,CAAaS,MAAjB,EAAyB;AACvBJ,MAAAA,GAAG,CAACI,MAAJ,GAAa,KAAKT,OAAL,CAAaS,MAA1B;AACD;;AAED,QAAI,OAAO,KAAKT,OAAL,CAAaU,mBAApB,KAA4C,SAAhD,EAA2D;AACzDL,MAAAA,GAAG,CAACK,mBAAJ,GAA0B,KAAKV,OAAL,CAAaU,mBAAvC;AACD;;AAED,UAAMC,cAAN,CAAqBR,MAArB,EAA6BE,GAA7B,EAAkCD,QAAlC;AACD;;AArBqD;;AAwBxDT,aAAa,CAACE,sBAAD,EAAyB,CACpCH,MAAM,CAACkB,cAD6B,EAEpClB,MAAM,CAACmB,SAF6B,EAGpCnB,MAAM,CAACoB,sBAH6B,CAAzB,CAAb;AAMAC,MAAM,CAACC,OAAP,GAAiBnB,sBAAjB","sourcesContent":["'use strict';\n\nconst CommandOperationV2 = require('./command_v2');\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst MongoDBNamespace = require('../utils').MongoDBNamespace;\n\nclass ListDatabasesOperation extends CommandOperationV2 {\n  constructor(db, options) {\n    super(db, options);\n    this.ns = new MongoDBNamespace('admin', '$cmd');\n  }\n\n  execute(server, callback) {\n    const cmd = { listDatabases: 1 };\n    if (this.options.nameOnly) {\n      cmd.nameOnly = Number(cmd.nameOnly);\n    }\n\n    if (this.options.filter) {\n      cmd.filter = this.options.filter;\n    }\n\n    if (typeof this.options.authorizedDatabases === 'boolean') {\n      cmd.authorizedDatabases = this.options.authorizedDatabases;\n    }\n\n    super.executeCommand(server, cmd, callback);\n  }\n}\n\ndefineAspects(ListDatabasesOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION\n]);\n\nmodule.exports = ListDatabasesOperation;\n"]},"metadata":{},"sourceType":"script"}