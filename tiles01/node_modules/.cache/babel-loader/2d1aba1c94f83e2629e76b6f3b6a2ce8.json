{"ast":null,"code":"'use strict';\n\nconst Aspect = require('./operation').Aspect;\n\nconst CommandOperation = require('./command');\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst handleCallback = require('../utils').handleCallback;\n\nclass DropOperation extends CommandOperation {\n  constructor(db, options) {\n    const finalOptions = Object.assign({}, options, db.s.options);\n\n    if (options.session) {\n      finalOptions.session = options.session;\n    }\n\n    super(db, finalOptions);\n  }\n\n  execute(callback) {\n    super.execute((err, result) => {\n      if (err) return handleCallback(callback, err);\n      if (result.ok) return handleCallback(callback, null, true);\n      handleCallback(callback, null, false);\n    });\n  }\n\n}\n\ndefineAspects(DropOperation, Aspect.WRITE_OPERATION);\n\nclass DropCollectionOperation extends DropOperation {\n  constructor(db, name, options) {\n    super(db, options);\n    this.name = name;\n    this.namespace = `${db.namespace}.${name}`;\n  }\n\n  _buildCommand() {\n    return {\n      drop: this.name\n    };\n  }\n\n}\n\nclass DropDatabaseOperation extends DropOperation {\n  _buildCommand() {\n    return {\n      dropDatabase: 1\n    };\n  }\n\n}\n\nmodule.exports = {\n  DropOperation,\n  DropCollectionOperation,\n  DropDatabaseOperation\n};","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/mongodb/lib/operations/drop.js"],"names":["Aspect","require","CommandOperation","defineAspects","handleCallback","DropOperation","constructor","db","options","finalOptions","Object","assign","s","session","execute","callback","err","result","ok","WRITE_OPERATION","DropCollectionOperation","name","namespace","_buildCommand","drop","DropDatabaseOperation","dropDatabase","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAAtC;;AACA,MAAME,gBAAgB,GAAGD,OAAO,CAAC,WAAD,CAAhC;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBE,aAA7C;;AACA,MAAMC,cAAc,GAAGH,OAAO,CAAC,UAAD,CAAP,CAAoBG,cAA3C;;AAEA,MAAMC,aAAN,SAA4BH,gBAA5B,CAA6C;AAC3CI,EAAAA,WAAW,CAACC,EAAD,EAAKC,OAAL,EAAc;AACvB,UAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,OAAlB,EAA2BD,EAAE,CAACK,CAAH,CAAKJ,OAAhC,CAArB;;AAEA,QAAIA,OAAO,CAACK,OAAZ,EAAqB;AACnBJ,MAAAA,YAAY,CAACI,OAAb,GAAuBL,OAAO,CAACK,OAA/B;AACD;;AAED,UAAMN,EAAN,EAAUE,YAAV;AACD;;AAEDK,EAAAA,OAAO,CAACC,QAAD,EAAW;AAChB,UAAMD,OAAN,CAAc,CAACE,GAAD,EAAMC,MAAN,KAAiB;AAC7B,UAAID,GAAJ,EAAS,OAAOZ,cAAc,CAACW,QAAD,EAAWC,GAAX,CAArB;AACT,UAAIC,MAAM,CAACC,EAAX,EAAe,OAAOd,cAAc,CAACW,QAAD,EAAW,IAAX,EAAiB,IAAjB,CAArB;AACfX,MAAAA,cAAc,CAACW,QAAD,EAAW,IAAX,EAAiB,KAAjB,CAAd;AACD,KAJD;AAKD;;AAjB0C;;AAoB7CZ,aAAa,CAACE,aAAD,EAAgBL,MAAM,CAACmB,eAAvB,CAAb;;AAEA,MAAMC,uBAAN,SAAsCf,aAAtC,CAAoD;AAClDC,EAAAA,WAAW,CAACC,EAAD,EAAKc,IAAL,EAAWb,OAAX,EAAoB;AAC7B,UAAMD,EAAN,EAAUC,OAAV;AAEA,SAAKa,IAAL,GAAYA,IAAZ;AACA,SAAKC,SAAL,GAAkB,GAAEf,EAAE,CAACe,SAAU,IAAGD,IAAK,EAAzC;AACD;;AAEDE,EAAAA,aAAa,GAAG;AACd,WAAO;AAAEC,MAAAA,IAAI,EAAE,KAAKH;AAAb,KAAP;AACD;;AAViD;;AAapD,MAAMI,qBAAN,SAAoCpB,aAApC,CAAkD;AAChDkB,EAAAA,aAAa,GAAG;AACd,WAAO;AAAEG,MAAAA,YAAY,EAAE;AAAhB,KAAP;AACD;;AAH+C;;AAMlDC,MAAM,CAACC,OAAP,GAAiB;AACfvB,EAAAA,aADe;AAEfe,EAAAA,uBAFe;AAGfK,EAAAA;AAHe,CAAjB","sourcesContent":["'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst CommandOperation = require('./command');\nconst defineAspects = require('./operation').defineAspects;\nconst handleCallback = require('../utils').handleCallback;\n\nclass DropOperation extends CommandOperation {\n  constructor(db, options) {\n    const finalOptions = Object.assign({}, options, db.s.options);\n\n    if (options.session) {\n      finalOptions.session = options.session;\n    }\n\n    super(db, finalOptions);\n  }\n\n  execute(callback) {\n    super.execute((err, result) => {\n      if (err) return handleCallback(callback, err);\n      if (result.ok) return handleCallback(callback, null, true);\n      handleCallback(callback, null, false);\n    });\n  }\n}\n\ndefineAspects(DropOperation, Aspect.WRITE_OPERATION);\n\nclass DropCollectionOperation extends DropOperation {\n  constructor(db, name, options) {\n    super(db, options);\n\n    this.name = name;\n    this.namespace = `${db.namespace}.${name}`;\n  }\n\n  _buildCommand() {\n    return { drop: this.name };\n  }\n}\n\nclass DropDatabaseOperation extends DropOperation {\n  _buildCommand() {\n    return { dropDatabase: 1 };\n  }\n}\n\nmodule.exports = {\n  DropOperation,\n  DropCollectionOperation,\n  DropDatabaseOperation\n};\n"]},"metadata":{},"sourceType":"script"}