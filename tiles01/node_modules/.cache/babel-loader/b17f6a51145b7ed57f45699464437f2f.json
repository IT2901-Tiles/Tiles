{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\karen\\\\bacheloroppgaven\\\\Tiles\\\\tiles01\\\\src\\\\Components\\\\AudioAnimations.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport vibrateSound from '../Audio/feedback/synth-vibe.wav';\nimport dropSound from '../Audio/feedback/goblin-fall.mp3'; // Adding sounds to the different animations provided in AnimationsPage.jsx\n\nfunction AudioAnimations(props) {\n  _s();\n\n  const [triggerCard] = useState(props.triggerCard); // props to pass to AnimationsPreview.jsx\n\n  const [thingCard] = useState(props.thingCard); // props to pass to AnimationsPreview.jsx\n\n  const [feedbackCard] = useState(props.feedbackCard); // props to pass to AnimationsPreview.jsx\n\n  var srcForSound;\n  var audioType = 'audio/'; // Check which cards are picked by the user, and match the audio with each card (that has audio associated to it)\n\n  function matchAudioToCards() {\n    if (feedbackCard === 'vibrate') {\n      return [vibrateSound, 'wav'];\n    } else if (triggerCard === 'drop') {\n      return [dropSound, 'mp3'];\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      autoPlay: true,\n      loop: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: matchAudioToCards()[0],\n        type: audioType + matchAudioToCards()[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"player\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: matchAudioToCards()[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onclick: \"document.getElementById('player').play()\",\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onclick: \"document.getElementById('player').pause()\",\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onclick: \"document.getElementById('player').muted=!document.getElementById('player').muted\",\n        children: \"Mute/ Unmute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this);\n}\n\n_s(AudioAnimations, \"CjcveqJIEJWbceupU/zq6JURvvE=\");\n\n_c = AudioAnimations;\nexport default AudioAnimations;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioAnimations\");","map":{"version":3,"sources":["C:/Users/karen/bacheloroppgaven/Tiles/tiles01/src/Components/AudioAnimations.jsx"],"names":["React","useState","vibrateSound","dropSound","AudioAnimations","props","triggerCard","thingCard","feedbackCard","srcForSound","audioType","matchAudioToCards"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,SAAP,MAAsB,mCAAtB,C,CAEA;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC5B,QAAM,CAACC,WAAD,IAAgBL,QAAQ,CAACI,KAAK,CAACC,WAAP,CAA9B,CAD4B,CACsB;;AAClD,QAAM,CAACC,SAAD,IAAcN,QAAQ,CAACI,KAAK,CAACE,SAAP,CAA5B,CAF4B,CAEkB;;AAC9C,QAAM,CAACC,YAAD,IAAiBP,QAAQ,CAACI,KAAK,CAACG,YAAP,CAA/B,CAH4B,CAGwB;;AACpD,MAAIC,WAAJ;AACA,MAAIC,SAAS,GAAG,QAAhB,CAL4B,CAO5B;;AACA,WAASC,iBAAT,GAA6B;AACzB,QAAIH,YAAY,KAAK,SAArB,EAAgC;AAC5B,aAAO,CAACN,YAAD,EAAe,KAAf,CAAP;AACH,KAFD,MAEO,IAAII,WAAW,KAAK,MAApB,EAA4B;AAC/B,aAAO,CAACH,SAAD,EAAY,KAAZ,CAAP;AACH;AACJ;;AAED,sBACQ;AAAA,4BACI;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,QAAQ,MAAxB;AAAyB,MAAA,IAAI,MAA7B;AAAA,6BACA;AAAQ,QAAA,GAAG,EAAEQ,iBAAiB,GAAG,CAAH,CAA9B;AAAqC,QAAA,IAAI,EAAED,SAAS,GAAGC,iBAAiB,GAAG,CAAH;AAAxE;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAO,MAAA,EAAE,EAAC,QAAV;AAAA,6BACI;AAAQ,QAAA,GAAG,EAAEA,iBAAiB,GAAG,CAAH;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAC,0CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAC,2CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAC,kFAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAeH;;GA/BQP,e;;KAAAA,e;AAiCT,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport vibrateSound from '../Audio/feedback/synth-vibe.wav'\r\nimport dropSound from '../Audio/feedback/goblin-fall.mp3'\r\n\r\n// Adding sounds to the different animations provided in AnimationsPage.jsx\r\nfunction AudioAnimations(props) {\r\n    const [triggerCard] = useState(props.triggerCard) // props to pass to AnimationsPreview.jsx\r\n    const [thingCard] = useState(props.thingCard) // props to pass to AnimationsPreview.jsx\r\n    const [feedbackCard] = useState(props.feedbackCard) // props to pass to AnimationsPreview.jsx\r\n    var srcForSound;\r\n    var audioType = 'audio/'\r\n\r\n    // Check which cards are picked by the user, and match the audio with each card (that has audio associated to it)\r\n    function matchAudioToCards() {\r\n        if (feedbackCard === 'vibrate') {\r\n            return [vibrateSound, 'wav'] \r\n        } else if (triggerCard === 'drop') {\r\n            return [dropSound, 'mp3']\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div>\r\n                <audio controls autoPlay loop> \r\n                <source src={matchAudioToCards()[0]} type={audioType + matchAudioToCards()[1]}/>\r\n            </audio>\r\n                <audio id=\"player\">\r\n                    <source src={matchAudioToCards()[0]}></source>\r\n                </audio>\r\n                <div>\r\n                    <button onclick=\"document.getElementById('player').play()\">Play</button>\r\n                    <button onclick=\"document.getElementById('player').pause()\">Pause</button>\r\n                    <button onclick=\"document.getElementById('player').muted=!document.getElementById('player').muted\">Mute/ Unmute</button>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default AudioAnimations;"]},"metadata":{},"sourceType":"module"}