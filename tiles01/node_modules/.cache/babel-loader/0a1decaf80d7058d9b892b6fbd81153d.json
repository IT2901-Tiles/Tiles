{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\StuartGO\\\\projects\\\\bachelorOppgave\\\\Tiles\\\\tiles01\\\\src\\\\Components\\\\LinkButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../CSS/Button.css';\nimport Button from 'react-bootstrap/Button'; //Button component \n//props:\n//title: the title on the button\n//target: tha page the button is going to direct to\n//size: aize of the button, must be Large or Small\n//category: which category the button us linking to, optional\n//category will also change the colour of the button\n//options for categoryare: trigger, thing, feedback, animation\n\nfunction LinkButton(props) {\n  _s();\n\n  const [title] = useState(props.title);\n  const [path] = useState(props.target);\n  const [category] = useState(props.category);\n  const [size] = useState(props.size + \"Button\");\n  let colour = \"#F08A00\";\n  let fontColour = \"#F3EAC2\";\n\n  if (category === \"thing\") {\n    colour = \"#D64539\";\n  } else if (category === \"feedback\") {\n    colour = \"#FFCD00\";\n    fontColour = \"#484848\";\n  } else if (category === \"animation\") {\n    colour = \"#84AD64\";\n  }\n\n  let children = /*#__PURE__*/_jsxDEV(Button, {\n    style: {\n      backgroundColor: colour,\n      color: fontColour\n    },\n    className: size,\n    variant: \"primary\",\n    onClick: props.onclick,\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 18\n  }, this);\n\n  let to = {\n    pathname: path,\n    state: {\n      category: category,\n      color: colour,\n      card: props.card\n    } // state: { category: category, color:colour }\n\n  };\n  console.log(props.onclick);\n  let condition = props.onclick();\n\n  const ConditionalLink = ({\n    children,\n    to,\n    condition\n  }) => !!condition && to ? /*#__PURE__*/_jsxDEV(Link, {\n    to: to,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n\n  return /*#__PURE__*/_jsxDEV(ConditionalLink, {\n    children: children,\n    to: to,\n    condition: condition\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LinkButton, \"Zof6jA9RVbGfg/l0a23YgX2I+l8=\");\n\n_c = LinkButton;\nexport default LinkButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkButton\");","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/src/Components/LinkButton.jsx"],"names":["React","useState","Link","Button","LinkButton","props","title","path","target","category","size","colour","fontColour","children","backgroundColor","color","onclick","to","pathname","state","card","console","log","condition","ConditionalLink"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM,CAACC,KAAD,IAAUL,QAAQ,CAACI,KAAK,CAACC,KAAP,CAAxB;AACA,QAAM,CAACC,IAAD,IAASN,QAAQ,CAACI,KAAK,CAACG,MAAP,CAAvB;AACA,QAAM,CAACC,QAAD,IAAaR,QAAQ,CAACI,KAAK,CAACI,QAAP,CAA3B;AACA,QAAM,CAACC,IAAD,IAAST,QAAQ,CAACI,KAAK,CAACK,IAAN,GAAa,QAAd,CAAvB;AAEA,MAAIC,MAAM,GAAG,SAAb;AACA,MAAIC,UAAU,GAAG,SAAjB;;AAEA,MAAIH,QAAQ,KAAK,OAAjB,EAA0B;AACtBE,IAAAA,MAAM,GAAG,SAAT;AACH,GAFD,MAEO,IAAIF,QAAQ,KAAK,UAAjB,EAA6B;AAChCE,IAAAA,MAAM,GAAG,SAAT;AACAC,IAAAA,UAAU,GAAG,SAAb;AACH,GAHM,MAGA,IAAIH,QAAQ,KAAK,WAAjB,EAA8B;AACjCE,IAAAA,MAAM,GAAG,SAAT;AACH;;AACD,MAAIE,QAAQ,gBAAC,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAEH,MAAnB;AAA2BI,MAAAA,KAAK,EAAEH;AAAlC,KAAf;AAA+D,IAAA,SAAS,EAAEF,IAA1E;AAAgF,IAAA,OAAO,EAAC,SAAxF;AAAkG,IAAA,OAAO,EAAEL,KAAK,CAACW,OAAjH;AAAA,cAA2HV;AAA3H;AAAA;AAAA;AAAA;AAAA,UAAb;;AACA,MAAIW,EAAE,GAAC;AACHC,IAAAA,QAAQ,EAAEX,IADP;AAEHY,IAAAA,KAAK,EAAE;AAAEV,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBM,MAAAA,KAAK,EAAEJ,MAA7B;AAAqCS,MAAAA,IAAI,EAAEf,KAAK,CAACe;AAAjD,KAFJ,CAGH;;AAHG,GAAP;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACW,OAAlB;AACA,MAAIO,SAAS,GAAClB,KAAK,CAACW,OAAN,EAAd;;AAIA,QAAMQ,eAAe,GAAG,CAAC;AAAEX,IAAAA,QAAF;AAAYI,IAAAA,EAAZ;AAAgBM,IAAAA;AAAhB,GAAD,KAAkC,CAAC,CAACA,SAAF,IAAeN,EAAhB,gBACrD,QAAC,IAAD;AAAM,IAAA,EAAE,EAAEA,EAAV;AAAA,cAAeJ;AAAf;AAAA;AAAA;AAAA;AAAA,UADqD,gBAErD;AAAA,cAAGA;AAAH,mBAFJ;;AAIA,sBACI,QAAC,eAAD;AAAiB,IAAA,QAAQ,EAAEA,QAA3B;AAAqC,IAAA,EAAE,EAAEI,EAAzC;AAA6C,IAAA,SAAS,EAAEM;AAAxD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAnCQnB,U;;KAAAA,U;AAqCT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../CSS/Button.css';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n//Button component \r\n//props:\r\n//title: the title on the button\r\n//target: tha page the button is going to direct to\r\n//size: aize of the button, must be Large or Small\r\n//category: which category the button us linking to, optional\r\n//category will also change the colour of the button\r\n//options for categoryare: trigger, thing, feedback, animation\r\n\r\nfunction LinkButton(props) {\r\n    const [title] = useState(props.title)\r\n    const [path] = useState(props.target)\r\n    const [category] = useState(props.category)\r\n    const [size] = useState(props.size + \"Button\")\r\n\r\n    let colour = \"#F08A00\";\r\n    let fontColour = \"#F3EAC2\";\r\n\r\n    if (category === \"thing\") {\r\n        colour = \"#D64539\"\r\n    } else if (category === \"feedback\") {\r\n        colour = \"#FFCD00\"\r\n        fontColour = \"#484848\"\r\n    } else if (category === \"animation\") {\r\n        colour = \"#84AD64\"\r\n    }\r\n    let children=<Button style={{ backgroundColor: colour, color: fontColour }} className={size} variant=\"primary\" onClick={props.onclick}>{title}</Button>\r\n    let to={\r\n        pathname: path,\r\n        state: { category: category, color: colour, card: props.card }\r\n        // state: { category: category, color:colour }\r\n    }\r\n    console.log(props.onclick)\r\n    let condition=props.onclick()\r\n    \r\n    \r\n\r\n    const ConditionalLink = ({ children, to, condition }) => (!!condition && to)\r\n      ? <Link to={to}>{children}</Link>\r\n      : <>{children}</>;\r\n\r\n    return (\r\n        <ConditionalLink children={children} to={to} condition={condition}></ConditionalLink>\r\n    );\r\n}\r\n\r\nexport default LinkButton;\r\n"]},"metadata":{},"sourceType":"module"}