{"ast":null,"code":"'use strict';\n\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\n\nconst AuthProvider = require('./auth_provider').AuthProvider; // TODO: can we get the Binary type from this.bson instead?\n\n\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\n\nclass Plain extends AuthProvider {\n  auth(authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    const username = credentials.username;\n    const password = credentials.password;\n    const payload = new Binary(`\\x00${username}\\x00${password}`);\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n    connection.command('$external.$cmd', command, callback);\n  }\n\n}\n\nmodule.exports = Plain;","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/mongodb/lib/core/auth/plain.js"],"names":["retrieveBSON","require","AuthProvider","BSON","Binary","Plain","auth","authContext","callback","connection","credentials","username","password","payload","command","saslStart","mechanism","autoAuthorize","module","exports"],"mappings":"AAAA;;AACA,MAAMA,YAAY,GAAGC,OAAO,CAAC,qBAAD,CAAP,CAA+BD,YAApD;;AACA,MAAME,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,YAAhD,C,CAEA;;;AACA,MAAMC,IAAI,GAAGH,YAAY,EAAzB;AACA,MAAMI,MAAM,GAAGD,IAAI,CAACC,MAApB;;AAEA,MAAMC,KAAN,SAAoBH,YAApB,CAAiC;AAC/BI,EAAAA,IAAI,CAACC,WAAD,EAAcC,QAAd,EAAwB;AAC1B,UAAMC,UAAU,GAAGF,WAAW,CAACE,UAA/B;AACA,UAAMC,WAAW,GAAGH,WAAW,CAACG,WAAhC;AACA,UAAMC,QAAQ,GAAGD,WAAW,CAACC,QAA7B;AACA,UAAMC,QAAQ,GAAGF,WAAW,CAACE,QAA7B;AAEA,UAAMC,OAAO,GAAG,IAAIT,MAAJ,CAAY,OAAMO,QAAS,OAAMC,QAAS,EAA1C,CAAhB;AACA,UAAME,OAAO,GAAG;AACdC,MAAAA,SAAS,EAAE,CADG;AAEdC,MAAAA,SAAS,EAAE,OAFG;AAGdH,MAAAA,OAAO,EAAEA,OAHK;AAIdI,MAAAA,aAAa,EAAE;AAJD,KAAhB;AAOAR,IAAAA,UAAU,CAACK,OAAX,CAAmB,gBAAnB,EAAqCA,OAArC,EAA8CN,QAA9C;AACD;;AAhB8B;;AAmBjCU,MAAM,CAACC,OAAP,GAAiBd,KAAjB","sourcesContent":["'use strict';\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst AuthProvider = require('./auth_provider').AuthProvider;\n\n// TODO: can we get the Binary type from this.bson instead?\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\n\nclass Plain extends AuthProvider {\n  auth(authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    const username = credentials.username;\n    const password = credentials.password;\n\n    const payload = new Binary(`\\x00${username}\\x00${password}`);\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n\n    connection.command('$external.$cmd', command, callback);\n  }\n}\n\nmodule.exports = Plain;\n"]},"metadata":{},"sourceType":"script"}