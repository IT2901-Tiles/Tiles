{"ast":null,"code":"'use strict';\n\nconst AggregateOperation = require('./aggregate');\n\nclass CountDocumentsOperation extends AggregateOperation {\n  constructor(collection, query, options) {\n    const pipeline = [{\n      $match: query\n    }];\n\n    if (typeof options.skip === 'number') {\n      pipeline.push({\n        $skip: options.skip\n      });\n    }\n\n    if (typeof options.limit === 'number') {\n      pipeline.push({\n        $limit: options.limit\n      });\n    }\n\n    pipeline.push({\n      $group: {\n        _id: 1,\n        n: {\n          $sum: 1\n        }\n      }\n    });\n    super(collection, pipeline, options);\n  }\n\n  execute(server, callback) {\n    super.execute(server, (err, result) => {\n      if (err) {\n        callback(err, null);\n        return;\n      } // NOTE: We're avoiding creating a cursor here to reduce the callstack.\n\n\n      const response = result.result;\n\n      if (response.cursor == null || response.cursor.firstBatch == null) {\n        callback(null, 0);\n        return;\n      }\n\n      const docs = response.cursor.firstBatch;\n      callback(null, docs.length ? docs[0].n : 0);\n    });\n  }\n\n}\n\nmodule.exports = CountDocumentsOperation;","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/mongodb/lib/operations/count_documents.js"],"names":["AggregateOperation","require","CountDocumentsOperation","constructor","collection","query","options","pipeline","$match","skip","push","$skip","limit","$limit","$group","_id","n","$sum","execute","server","callback","err","result","response","cursor","firstBatch","docs","length","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,aAAD,CAAlC;;AAEA,MAAMC,uBAAN,SAAsCF,kBAAtC,CAAyD;AACvDG,EAAAA,WAAW,CAACC,UAAD,EAAaC,KAAb,EAAoBC,OAApB,EAA6B;AACtC,UAAMC,QAAQ,GAAG,CAAC;AAAEC,MAAAA,MAAM,EAAEH;AAAV,KAAD,CAAjB;;AACA,QAAI,OAAOC,OAAO,CAACG,IAAf,KAAwB,QAA5B,EAAsC;AACpCF,MAAAA,QAAQ,CAACG,IAAT,CAAc;AAAEC,QAAAA,KAAK,EAAEL,OAAO,CAACG;AAAjB,OAAd;AACD;;AAED,QAAI,OAAOH,OAAO,CAACM,KAAf,KAAyB,QAA7B,EAAuC;AACrCL,MAAAA,QAAQ,CAACG,IAAT,CAAc;AAAEG,QAAAA,MAAM,EAAEP,OAAO,CAACM;AAAlB,OAAd;AACD;;AAEDL,IAAAA,QAAQ,CAACG,IAAT,CAAc;AAAEI,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,CAAC,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AAAb;AAAV,KAAd;AAEA,UAAMb,UAAN,EAAkBG,QAAlB,EAA4BD,OAA5B;AACD;;AAEDY,EAAAA,OAAO,CAACC,MAAD,EAASC,QAAT,EAAmB;AACxB,UAAMF,OAAN,CAAcC,MAAd,EAAsB,CAACE,GAAD,EAAMC,MAAN,KAAiB;AACrC,UAAID,GAAJ,EAAS;AACPD,QAAAA,QAAQ,CAACC,GAAD,EAAM,IAAN,CAAR;AACA;AACD,OAJoC,CAMrC;;;AACA,YAAME,QAAQ,GAAGD,MAAM,CAACA,MAAxB;;AACA,UAAIC,QAAQ,CAACC,MAAT,IAAmB,IAAnB,IAA2BD,QAAQ,CAACC,MAAT,CAAgBC,UAAhB,IAA8B,IAA7D,EAAmE;AACjEL,QAAAA,QAAQ,CAAC,IAAD,EAAO,CAAP,CAAR;AACA;AACD;;AAED,YAAMM,IAAI,GAAGH,QAAQ,CAACC,MAAT,CAAgBC,UAA7B;AACAL,MAAAA,QAAQ,CAAC,IAAD,EAAOM,IAAI,CAACC,MAAL,GAAcD,IAAI,CAAC,CAAD,CAAJ,CAAQV,CAAtB,GAA0B,CAAjC,CAAR;AACD,KAfD;AAgBD;;AAjCsD;;AAoCzDY,MAAM,CAACC,OAAP,GAAiB3B,uBAAjB","sourcesContent":["'use strict';\n\nconst AggregateOperation = require('./aggregate');\n\nclass CountDocumentsOperation extends AggregateOperation {\n  constructor(collection, query, options) {\n    const pipeline = [{ $match: query }];\n    if (typeof options.skip === 'number') {\n      pipeline.push({ $skip: options.skip });\n    }\n\n    if (typeof options.limit === 'number') {\n      pipeline.push({ $limit: options.limit });\n    }\n\n    pipeline.push({ $group: { _id: 1, n: { $sum: 1 } } });\n\n    super(collection, pipeline, options);\n  }\n\n  execute(server, callback) {\n    super.execute(server, (err, result) => {\n      if (err) {\n        callback(err, null);\n        return;\n      }\n\n      // NOTE: We're avoiding creating a cursor here to reduce the callstack.\n      const response = result.result;\n      if (response.cursor == null || response.cursor.firstBatch == null) {\n        callback(null, 0);\n        return;\n      }\n\n      const docs = response.cursor.firstBatch;\n      callback(null, docs.length ? docs[0].n : 0);\n    });\n  }\n}\n\nmodule.exports = CountDocumentsOperation;\n"]},"metadata":{},"sourceType":"script"}