{"ast":null,"code":"'use strict';\n\nvar retrieveBSON = require('./utils').retrieveBSON;\n\nvar BSON = retrieveBSON();\nvar Long = BSON.Long;\n\nconst Buffer = require('safe-buffer').Buffer; // Incrementing request id\n\n\nvar _requestId = 0; // Wire command operation ids\n\nvar opcodes = require('../wireprotocol/shared').opcodes; // Query flags\n\n\nvar OPTS_TAILABLE_CURSOR = 2;\nvar OPTS_SLAVE = 4;\nvar OPTS_OPLOG_REPLAY = 8;\nvar OPTS_NO_CURSOR_TIMEOUT = 16;\nvar OPTS_AWAIT_DATA = 32;\nvar OPTS_EXHAUST = 64;\nvar OPTS_PARTIAL = 128; // Response flags\n\nvar CURSOR_NOT_FOUND = 1;\nvar QUERY_FAILURE = 2;\nvar SHARD_CONFIG_STALE = 4;\nvar AWAIT_CAPABLE = 8;\n/**************************************************************\n * QUERY\n **************************************************************/\n\nvar Query = function (bson, ns, query, options) {\n  var self = this; // Basic options needed to be passed in\n\n  if (ns == null) throw new Error('ns must be specified for query');\n  if (query == null) throw new Error('query must be specified for query'); // Validate that we are not passing 0x00 in the collection name\n\n  if (ns.indexOf('\\x00') !== -1) {\n    throw new Error('namespace cannot contain a null character');\n  } // Basic options\n\n\n  this.bson = bson;\n  this.ns = ns;\n  this.query = query; // Additional options\n\n  this.numberToSkip = options.numberToSkip || 0;\n  this.numberToReturn = options.numberToReturn || 0;\n  this.returnFieldSelector = options.returnFieldSelector || null;\n  this.requestId = Query.getRequestId(); // special case for pre-3.2 find commands, delete ASAP\n\n  this.pre32Limit = options.pre32Limit; // Serialization option\n\n  this.serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  this.ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n  this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n  this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : true;\n  this.batchSize = self.numberToReturn; // Flags\n\n  this.tailable = false;\n  this.slaveOk = typeof options.slaveOk === 'boolean' ? options.slaveOk : false;\n  this.oplogReplay = false;\n  this.noCursorTimeout = false;\n  this.awaitData = false;\n  this.exhaust = false;\n  this.partial = false;\n}; //\n// Assign a new request Id\n\n\nQuery.prototype.incRequestId = function () {\n  this.requestId = _requestId++;\n}; //\n// Assign a new request Id\n\n\nQuery.nextRequestId = function () {\n  return _requestId + 1;\n}; //\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\n\n\nQuery.prototype.toBin = function () {\n  var self = this;\n  var buffers = [];\n  var projection = null; // Set up the flags\n\n  var flags = 0;\n\n  if (this.tailable) {\n    flags |= OPTS_TAILABLE_CURSOR;\n  }\n\n  if (this.slaveOk) {\n    flags |= OPTS_SLAVE;\n  }\n\n  if (this.oplogReplay) {\n    flags |= OPTS_OPLOG_REPLAY;\n  }\n\n  if (this.noCursorTimeout) {\n    flags |= OPTS_NO_CURSOR_TIMEOUT;\n  }\n\n  if (this.awaitData) {\n    flags |= OPTS_AWAIT_DATA;\n  }\n\n  if (this.exhaust) {\n    flags |= OPTS_EXHAUST;\n  }\n\n  if (this.partial) {\n    flags |= OPTS_PARTIAL;\n  } // If batchSize is different to self.numberToReturn\n\n\n  if (self.batchSize !== self.numberToReturn) self.numberToReturn = self.batchSize; // Allocate write protocol header buffer\n\n  var header = Buffer.alloc(4 * 4 + // Header\n  4 + // Flags\n  Buffer.byteLength(self.ns) + 1 + // namespace\n  4 + // numberToSkip\n  4 // numberToReturn\n  ); // Add header to buffers\n\n  buffers.push(header); // Serialize the query\n\n  var query = self.bson.serialize(this.query, {\n    checkKeys: this.checkKeys,\n    serializeFunctions: this.serializeFunctions,\n    ignoreUndefined: this.ignoreUndefined\n  }); // Add query document\n\n  buffers.push(query);\n\n  if (self.returnFieldSelector && Object.keys(self.returnFieldSelector).length > 0) {\n    // Serialize the projection document\n    projection = self.bson.serialize(this.returnFieldSelector, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    }); // Add projection document\n\n    buffers.push(projection);\n  } // Total message size\n\n\n  var totalLength = header.length + query.length + (projection ? projection.length : 0); // Set up the index\n\n  var index = 4; // Write total document length\n\n  header[3] = totalLength >> 24 & 0xff;\n  header[2] = totalLength >> 16 & 0xff;\n  header[1] = totalLength >> 8 & 0xff;\n  header[0] = totalLength & 0xff; // Write header information requestId\n\n  header[index + 3] = this.requestId >> 24 & 0xff;\n  header[index + 2] = this.requestId >> 16 & 0xff;\n  header[index + 1] = this.requestId >> 8 & 0xff;\n  header[index] = this.requestId & 0xff;\n  index = index + 4; // Write header information responseTo\n\n  header[index + 3] = 0 >> 24 & 0xff;\n  header[index + 2] = 0 >> 16 & 0xff;\n  header[index + 1] = 0 >> 8 & 0xff;\n  header[index] = 0 & 0xff;\n  index = index + 4; // Write header information OP_QUERY\n\n  header[index + 3] = opcodes.OP_QUERY >> 24 & 0xff;\n  header[index + 2] = opcodes.OP_QUERY >> 16 & 0xff;\n  header[index + 1] = opcodes.OP_QUERY >> 8 & 0xff;\n  header[index] = opcodes.OP_QUERY & 0xff;\n  index = index + 4; // Write header information flags\n\n  header[index + 3] = flags >> 24 & 0xff;\n  header[index + 2] = flags >> 16 & 0xff;\n  header[index + 1] = flags >> 8 & 0xff;\n  header[index] = flags & 0xff;\n  index = index + 4; // Write collection name\n\n  index = index + header.write(this.ns, index, 'utf8') + 1;\n  header[index - 1] = 0; // Write header information flags numberToSkip\n\n  header[index + 3] = this.numberToSkip >> 24 & 0xff;\n  header[index + 2] = this.numberToSkip >> 16 & 0xff;\n  header[index + 1] = this.numberToSkip >> 8 & 0xff;\n  header[index] = this.numberToSkip & 0xff;\n  index = index + 4; // Write header information flags numberToReturn\n\n  header[index + 3] = this.numberToReturn >> 24 & 0xff;\n  header[index + 2] = this.numberToReturn >> 16 & 0xff;\n  header[index + 1] = this.numberToReturn >> 8 & 0xff;\n  header[index] = this.numberToReturn & 0xff;\n  index = index + 4; // Return the buffers\n\n  return buffers;\n};\n\nQuery.getRequestId = function () {\n  return ++_requestId;\n};\n/**************************************************************\n * GETMORE\n **************************************************************/\n\n\nvar GetMore = function (bson, ns, cursorId, opts) {\n  opts = opts || {};\n  this.numberToReturn = opts.numberToReturn || 0;\n  this.requestId = _requestId++;\n  this.bson = bson;\n  this.ns = ns;\n  this.cursorId = cursorId;\n}; //\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\n\n\nGetMore.prototype.toBin = function () {\n  var length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + 4 * 4; // Create command buffer\n\n  var index = 0; // Allocate buffer\n\n  var _buffer = Buffer.alloc(length); // Write header information\n  // index = write32bit(index, _buffer, length);\n\n\n  _buffer[index + 3] = length >> 24 & 0xff;\n  _buffer[index + 2] = length >> 16 & 0xff;\n  _buffer[index + 1] = length >> 8 & 0xff;\n  _buffer[index] = length & 0xff;\n  index = index + 4; // index = write32bit(index, _buffer, requestId);\n\n  _buffer[index + 3] = this.requestId >> 24 & 0xff;\n  _buffer[index + 2] = this.requestId >> 16 & 0xff;\n  _buffer[index + 1] = this.requestId >> 8 & 0xff;\n  _buffer[index] = this.requestId & 0xff;\n  index = index + 4; // index = write32bit(index, _buffer, 0);\n\n  _buffer[index + 3] = 0 >> 24 & 0xff;\n  _buffer[index + 2] = 0 >> 16 & 0xff;\n  _buffer[index + 1] = 0 >> 8 & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4; // index = write32bit(index, _buffer, OP_GETMORE);\n\n  _buffer[index + 3] = opcodes.OP_GETMORE >> 24 & 0xff;\n  _buffer[index + 2] = opcodes.OP_GETMORE >> 16 & 0xff;\n  _buffer[index + 1] = opcodes.OP_GETMORE >> 8 & 0xff;\n  _buffer[index] = opcodes.OP_GETMORE & 0xff;\n  index = index + 4; // index = write32bit(index, _buffer, 0);\n\n  _buffer[index + 3] = 0 >> 24 & 0xff;\n  _buffer[index + 2] = 0 >> 16 & 0xff;\n  _buffer[index + 1] = 0 >> 8 & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4; // Write collection name\n\n  index = index + _buffer.write(this.ns, index, 'utf8') + 1;\n  _buffer[index - 1] = 0; // Write batch size\n  // index = write32bit(index, _buffer, numberToReturn);\n\n  _buffer[index + 3] = this.numberToReturn >> 24 & 0xff;\n  _buffer[index + 2] = this.numberToReturn >> 16 & 0xff;\n  _buffer[index + 1] = this.numberToReturn >> 8 & 0xff;\n  _buffer[index] = this.numberToReturn & 0xff;\n  index = index + 4; // Write cursor id\n  // index = write32bit(index, _buffer, cursorId.getLowBits());\n\n  _buffer[index + 3] = this.cursorId.getLowBits() >> 24 & 0xff;\n  _buffer[index + 2] = this.cursorId.getLowBits() >> 16 & 0xff;\n  _buffer[index + 1] = this.cursorId.getLowBits() >> 8 & 0xff;\n  _buffer[index] = this.cursorId.getLowBits() & 0xff;\n  index = index + 4; // index = write32bit(index, _buffer, cursorId.getHighBits());\n\n  _buffer[index + 3] = this.cursorId.getHighBits() >> 24 & 0xff;\n  _buffer[index + 2] = this.cursorId.getHighBits() >> 16 & 0xff;\n  _buffer[index + 1] = this.cursorId.getHighBits() >> 8 & 0xff;\n  _buffer[index] = this.cursorId.getHighBits() & 0xff;\n  index = index + 4; // Return buffer\n\n  return _buffer;\n};\n/**************************************************************\n * KILLCURSOR\n **************************************************************/\n\n\nvar KillCursor = function (bson, ns, cursorIds) {\n  this.ns = ns;\n  this.requestId = _requestId++;\n  this.cursorIds = cursorIds;\n}; //\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\n\n\nKillCursor.prototype.toBin = function () {\n  var length = 4 + 4 + 4 * 4 + this.cursorIds.length * 8; // Create command buffer\n\n  var index = 0;\n\n  var _buffer = Buffer.alloc(length); // Write header information\n  // index = write32bit(index, _buffer, length);\n\n\n  _buffer[index + 3] = length >> 24 & 0xff;\n  _buffer[index + 2] = length >> 16 & 0xff;\n  _buffer[index + 1] = length >> 8 & 0xff;\n  _buffer[index] = length & 0xff;\n  index = index + 4; // index = write32bit(index, _buffer, requestId);\n\n  _buffer[index + 3] = this.requestId >> 24 & 0xff;\n  _buffer[index + 2] = this.requestId >> 16 & 0xff;\n  _buffer[index + 1] = this.requestId >> 8 & 0xff;\n  _buffer[index] = this.requestId & 0xff;\n  index = index + 4; // index = write32bit(index, _buffer, 0);\n\n  _buffer[index + 3] = 0 >> 24 & 0xff;\n  _buffer[index + 2] = 0 >> 16 & 0xff;\n  _buffer[index + 1] = 0 >> 8 & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4; // index = write32bit(index, _buffer, OP_KILL_CURSORS);\n\n  _buffer[index + 3] = opcodes.OP_KILL_CURSORS >> 24 & 0xff;\n  _buffer[index + 2] = opcodes.OP_KILL_CURSORS >> 16 & 0xff;\n  _buffer[index + 1] = opcodes.OP_KILL_CURSORS >> 8 & 0xff;\n  _buffer[index] = opcodes.OP_KILL_CURSORS & 0xff;\n  index = index + 4; // index = write32bit(index, _buffer, 0);\n\n  _buffer[index + 3] = 0 >> 24 & 0xff;\n  _buffer[index + 2] = 0 >> 16 & 0xff;\n  _buffer[index + 1] = 0 >> 8 & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4; // Write batch size\n  // index = write32bit(index, _buffer, this.cursorIds.length);\n\n  _buffer[index + 3] = this.cursorIds.length >> 24 & 0xff;\n  _buffer[index + 2] = this.cursorIds.length >> 16 & 0xff;\n  _buffer[index + 1] = this.cursorIds.length >> 8 & 0xff;\n  _buffer[index] = this.cursorIds.length & 0xff;\n  index = index + 4; // Write all the cursor ids into the array\n\n  for (var i = 0; i < this.cursorIds.length; i++) {\n    // Write cursor id\n    // index = write32bit(index, _buffer, cursorIds[i].getLowBits());\n    _buffer[index + 3] = this.cursorIds[i].getLowBits() >> 24 & 0xff;\n    _buffer[index + 2] = this.cursorIds[i].getLowBits() >> 16 & 0xff;\n    _buffer[index + 1] = this.cursorIds[i].getLowBits() >> 8 & 0xff;\n    _buffer[index] = this.cursorIds[i].getLowBits() & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, cursorIds[i].getHighBits());\n\n    _buffer[index + 3] = this.cursorIds[i].getHighBits() >> 24 & 0xff;\n    _buffer[index + 2] = this.cursorIds[i].getHighBits() >> 16 & 0xff;\n    _buffer[index + 1] = this.cursorIds[i].getHighBits() >> 8 & 0xff;\n    _buffer[index] = this.cursorIds[i].getHighBits() & 0xff;\n    index = index + 4;\n  } // Return buffer\n\n\n  return _buffer;\n};\n\nvar Response = function (bson, message, msgHeader, msgBody, opts) {\n  opts = opts || {\n    promoteLongs: true,\n    promoteValues: true,\n    promoteBuffers: false\n  };\n  this.parsed = false;\n  this.raw = message;\n  this.data = msgBody;\n  this.bson = bson;\n  this.opts = opts; // Read the message header\n\n  this.length = msgHeader.length;\n  this.requestId = msgHeader.requestId;\n  this.responseTo = msgHeader.responseTo;\n  this.opCode = msgHeader.opCode;\n  this.fromCompressed = msgHeader.fromCompressed; // Read the message body\n\n  this.responseFlags = msgBody.readInt32LE(0);\n  this.cursorId = new Long(msgBody.readInt32LE(4), msgBody.readInt32LE(8));\n  this.startingFrom = msgBody.readInt32LE(12);\n  this.numberReturned = msgBody.readInt32LE(16); // Preallocate document array\n\n  this.documents = new Array(this.numberReturned); // Flag values\n\n  this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n  this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n  this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n  this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n  this.promoteLongs = typeof opts.promoteLongs === 'boolean' ? opts.promoteLongs : true;\n  this.promoteValues = typeof opts.promoteValues === 'boolean' ? opts.promoteValues : true;\n  this.promoteBuffers = typeof opts.promoteBuffers === 'boolean' ? opts.promoteBuffers : false;\n};\n\nResponse.prototype.isParsed = function () {\n  return this.parsed;\n};\n\nResponse.prototype.parse = function (options) {\n  // Don't parse again if not needed\n  if (this.parsed) return;\n  options = options || {}; // Allow the return of raw documents instead of parsing\n\n  var raw = options.raw || false;\n  var documentsReturnedIn = options.documentsReturnedIn || null;\n  var promoteLongs = typeof options.promoteLongs === 'boolean' ? options.promoteLongs : this.opts.promoteLongs;\n  var promoteValues = typeof options.promoteValues === 'boolean' ? options.promoteValues : this.opts.promoteValues;\n  var promoteBuffers = typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : this.opts.promoteBuffers;\n\n  var bsonSize, _options; // Set up the options\n\n\n  _options = {\n    promoteLongs: promoteLongs,\n    promoteValues: promoteValues,\n    promoteBuffers: promoteBuffers\n  }; // Position within OP_REPLY at which documents start\n  // (See https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n\n  this.index = 20; //\n  // Parse Body\n  //\n\n  for (var i = 0; i < this.numberReturned; i++) {\n    bsonSize = this.data[this.index] | this.data[this.index + 1] << 8 | this.data[this.index + 2] << 16 | this.data[this.index + 3] << 24; // If we have raw results specified slice the return document\n\n    if (raw) {\n      this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n    } else {\n      this.documents[i] = this.bson.deserialize(this.data.slice(this.index, this.index + bsonSize), _options);\n    } // Adjust the index\n\n\n    this.index = this.index + bsonSize;\n  }\n\n  if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n    const fieldsAsRaw = {};\n    fieldsAsRaw[documentsReturnedIn] = true;\n    _options.fieldsAsRaw = fieldsAsRaw;\n    const doc = this.bson.deserialize(this.documents[0], _options);\n    this.documents = [doc];\n  } // Set parsed\n\n\n  this.parsed = true;\n};\n\nmodule.exports = {\n  Query: Query,\n  GetMore: GetMore,\n  Response: Response,\n  KillCursor: KillCursor\n};","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/mongodb/lib/core/connection/commands.js"],"names":["retrieveBSON","require","BSON","Long","Buffer","_requestId","opcodes","OPTS_TAILABLE_CURSOR","OPTS_SLAVE","OPTS_OPLOG_REPLAY","OPTS_NO_CURSOR_TIMEOUT","OPTS_AWAIT_DATA","OPTS_EXHAUST","OPTS_PARTIAL","CURSOR_NOT_FOUND","QUERY_FAILURE","SHARD_CONFIG_STALE","AWAIT_CAPABLE","Query","bson","ns","query","options","self","Error","indexOf","numberToSkip","numberToReturn","returnFieldSelector","requestId","getRequestId","pre32Limit","serializeFunctions","ignoreUndefined","maxBsonSize","checkKeys","batchSize","tailable","slaveOk","oplogReplay","noCursorTimeout","awaitData","exhaust","partial","prototype","incRequestId","nextRequestId","toBin","buffers","projection","flags","header","alloc","byteLength","push","serialize","Object","keys","length","totalLength","index","OP_QUERY","write","GetMore","cursorId","opts","_buffer","OP_GETMORE","getLowBits","getHighBits","KillCursor","cursorIds","OP_KILL_CURSORS","i","Response","message","msgHeader","msgBody","promoteLongs","promoteValues","promoteBuffers","parsed","raw","data","responseTo","opCode","fromCompressed","responseFlags","readInt32LE","startingFrom","numberReturned","documents","Array","cursorNotFound","queryFailure","shardConfigStale","awaitCapable","isParsed","parse","documentsReturnedIn","bsonSize","_options","slice","deserialize","fieldsAsRaw","doc","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar retrieveBSON = require('./utils').retrieveBSON;\nvar BSON = retrieveBSON();\nvar Long = BSON.Long;\nconst Buffer = require('safe-buffer').Buffer;\n\n// Incrementing request id\nvar _requestId = 0;\n\n// Wire command operation ids\nvar opcodes = require('../wireprotocol/shared').opcodes;\n\n// Query flags\nvar OPTS_TAILABLE_CURSOR = 2;\nvar OPTS_SLAVE = 4;\nvar OPTS_OPLOG_REPLAY = 8;\nvar OPTS_NO_CURSOR_TIMEOUT = 16;\nvar OPTS_AWAIT_DATA = 32;\nvar OPTS_EXHAUST = 64;\nvar OPTS_PARTIAL = 128;\n\n// Response flags\nvar CURSOR_NOT_FOUND = 1;\nvar QUERY_FAILURE = 2;\nvar SHARD_CONFIG_STALE = 4;\nvar AWAIT_CAPABLE = 8;\n\n/**************************************************************\n * QUERY\n **************************************************************/\nvar Query = function(bson, ns, query, options) {\n  var self = this;\n  // Basic options needed to be passed in\n  if (ns == null) throw new Error('ns must be specified for query');\n  if (query == null) throw new Error('query must be specified for query');\n\n  // Validate that we are not passing 0x00 in the collection name\n  if (ns.indexOf('\\x00') !== -1) {\n    throw new Error('namespace cannot contain a null character');\n  }\n\n  // Basic options\n  this.bson = bson;\n  this.ns = ns;\n  this.query = query;\n\n  // Additional options\n  this.numberToSkip = options.numberToSkip || 0;\n  this.numberToReturn = options.numberToReturn || 0;\n  this.returnFieldSelector = options.returnFieldSelector || null;\n  this.requestId = Query.getRequestId();\n\n  // special case for pre-3.2 find commands, delete ASAP\n  this.pre32Limit = options.pre32Limit;\n\n  // Serialization option\n  this.serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  this.ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n  this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n  this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : true;\n  this.batchSize = self.numberToReturn;\n\n  // Flags\n  this.tailable = false;\n  this.slaveOk = typeof options.slaveOk === 'boolean' ? options.slaveOk : false;\n  this.oplogReplay = false;\n  this.noCursorTimeout = false;\n  this.awaitData = false;\n  this.exhaust = false;\n  this.partial = false;\n};\n\n//\n// Assign a new request Id\nQuery.prototype.incRequestId = function() {\n  this.requestId = _requestId++;\n};\n\n//\n// Assign a new request Id\nQuery.nextRequestId = function() {\n  return _requestId + 1;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nQuery.prototype.toBin = function() {\n  var self = this;\n  var buffers = [];\n  var projection = null;\n\n  // Set up the flags\n  var flags = 0;\n  if (this.tailable) {\n    flags |= OPTS_TAILABLE_CURSOR;\n  }\n\n  if (this.slaveOk) {\n    flags |= OPTS_SLAVE;\n  }\n\n  if (this.oplogReplay) {\n    flags |= OPTS_OPLOG_REPLAY;\n  }\n\n  if (this.noCursorTimeout) {\n    flags |= OPTS_NO_CURSOR_TIMEOUT;\n  }\n\n  if (this.awaitData) {\n    flags |= OPTS_AWAIT_DATA;\n  }\n\n  if (this.exhaust) {\n    flags |= OPTS_EXHAUST;\n  }\n\n  if (this.partial) {\n    flags |= OPTS_PARTIAL;\n  }\n\n  // If batchSize is different to self.numberToReturn\n  if (self.batchSize !== self.numberToReturn) self.numberToReturn = self.batchSize;\n\n  // Allocate write protocol header buffer\n  var header = Buffer.alloc(\n    4 * 4 + // Header\n    4 + // Flags\n    Buffer.byteLength(self.ns) +\n    1 + // namespace\n    4 + // numberToSkip\n      4 // numberToReturn\n  );\n\n  // Add header to buffers\n  buffers.push(header);\n\n  // Serialize the query\n  var query = self.bson.serialize(this.query, {\n    checkKeys: this.checkKeys,\n    serializeFunctions: this.serializeFunctions,\n    ignoreUndefined: this.ignoreUndefined\n  });\n\n  // Add query document\n  buffers.push(query);\n\n  if (self.returnFieldSelector && Object.keys(self.returnFieldSelector).length > 0) {\n    // Serialize the projection document\n    projection = self.bson.serialize(this.returnFieldSelector, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n    // Add projection document\n    buffers.push(projection);\n  }\n\n  // Total message size\n  var totalLength = header.length + query.length + (projection ? projection.length : 0);\n\n  // Set up the index\n  var index = 4;\n\n  // Write total document length\n  header[3] = (totalLength >> 24) & 0xff;\n  header[2] = (totalLength >> 16) & 0xff;\n  header[1] = (totalLength >> 8) & 0xff;\n  header[0] = totalLength & 0xff;\n\n  // Write header information requestId\n  header[index + 3] = (this.requestId >> 24) & 0xff;\n  header[index + 2] = (this.requestId >> 16) & 0xff;\n  header[index + 1] = (this.requestId >> 8) & 0xff;\n  header[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // Write header information responseTo\n  header[index + 3] = (0 >> 24) & 0xff;\n  header[index + 2] = (0 >> 16) & 0xff;\n  header[index + 1] = (0 >> 8) & 0xff;\n  header[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write header information OP_QUERY\n  header[index + 3] = (opcodes.OP_QUERY >> 24) & 0xff;\n  header[index + 2] = (opcodes.OP_QUERY >> 16) & 0xff;\n  header[index + 1] = (opcodes.OP_QUERY >> 8) & 0xff;\n  header[index] = opcodes.OP_QUERY & 0xff;\n  index = index + 4;\n\n  // Write header information flags\n  header[index + 3] = (flags >> 24) & 0xff;\n  header[index + 2] = (flags >> 16) & 0xff;\n  header[index + 1] = (flags >> 8) & 0xff;\n  header[index] = flags & 0xff;\n  index = index + 4;\n\n  // Write collection name\n  index = index + header.write(this.ns, index, 'utf8') + 1;\n  header[index - 1] = 0;\n\n  // Write header information flags numberToSkip\n  header[index + 3] = (this.numberToSkip >> 24) & 0xff;\n  header[index + 2] = (this.numberToSkip >> 16) & 0xff;\n  header[index + 1] = (this.numberToSkip >> 8) & 0xff;\n  header[index] = this.numberToSkip & 0xff;\n  index = index + 4;\n\n  // Write header information flags numberToReturn\n  header[index + 3] = (this.numberToReturn >> 24) & 0xff;\n  header[index + 2] = (this.numberToReturn >> 16) & 0xff;\n  header[index + 1] = (this.numberToReturn >> 8) & 0xff;\n  header[index] = this.numberToReturn & 0xff;\n  index = index + 4;\n\n  // Return the buffers\n  return buffers;\n};\n\nQuery.getRequestId = function() {\n  return ++_requestId;\n};\n\n/**************************************************************\n * GETMORE\n **************************************************************/\nvar GetMore = function(bson, ns, cursorId, opts) {\n  opts = opts || {};\n  this.numberToReturn = opts.numberToReturn || 0;\n  this.requestId = _requestId++;\n  this.bson = bson;\n  this.ns = ns;\n  this.cursorId = cursorId;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nGetMore.prototype.toBin = function() {\n  var length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + 4 * 4;\n  // Create command buffer\n  var index = 0;\n  // Allocate buffer\n  var _buffer = Buffer.alloc(length);\n\n  // Write header information\n  // index = write32bit(index, _buffer, length);\n  _buffer[index + 3] = (length >> 24) & 0xff;\n  _buffer[index + 2] = (length >> 16) & 0xff;\n  _buffer[index + 1] = (length >> 8) & 0xff;\n  _buffer[index] = length & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, requestId);\n  _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n  _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n  _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n  _buffer[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, OP_GETMORE);\n  _buffer[index + 3] = (opcodes.OP_GETMORE >> 24) & 0xff;\n  _buffer[index + 2] = (opcodes.OP_GETMORE >> 16) & 0xff;\n  _buffer[index + 1] = (opcodes.OP_GETMORE >> 8) & 0xff;\n  _buffer[index] = opcodes.OP_GETMORE & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write collection name\n  index = index + _buffer.write(this.ns, index, 'utf8') + 1;\n  _buffer[index - 1] = 0;\n\n  // Write batch size\n  // index = write32bit(index, _buffer, numberToReturn);\n  _buffer[index + 3] = (this.numberToReturn >> 24) & 0xff;\n  _buffer[index + 2] = (this.numberToReturn >> 16) & 0xff;\n  _buffer[index + 1] = (this.numberToReturn >> 8) & 0xff;\n  _buffer[index] = this.numberToReturn & 0xff;\n  index = index + 4;\n\n  // Write cursor id\n  // index = write32bit(index, _buffer, cursorId.getLowBits());\n  _buffer[index + 3] = (this.cursorId.getLowBits() >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorId.getLowBits() >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorId.getLowBits() >> 8) & 0xff;\n  _buffer[index] = this.cursorId.getLowBits() & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, cursorId.getHighBits());\n  _buffer[index + 3] = (this.cursorId.getHighBits() >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorId.getHighBits() >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorId.getHighBits() >> 8) & 0xff;\n  _buffer[index] = this.cursorId.getHighBits() & 0xff;\n  index = index + 4;\n\n  // Return buffer\n  return _buffer;\n};\n\n/**************************************************************\n * KILLCURSOR\n **************************************************************/\nvar KillCursor = function(bson, ns, cursorIds) {\n  this.ns = ns;\n  this.requestId = _requestId++;\n  this.cursorIds = cursorIds;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nKillCursor.prototype.toBin = function() {\n  var length = 4 + 4 + 4 * 4 + this.cursorIds.length * 8;\n\n  // Create command buffer\n  var index = 0;\n  var _buffer = Buffer.alloc(length);\n\n  // Write header information\n  // index = write32bit(index, _buffer, length);\n  _buffer[index + 3] = (length >> 24) & 0xff;\n  _buffer[index + 2] = (length >> 16) & 0xff;\n  _buffer[index + 1] = (length >> 8) & 0xff;\n  _buffer[index] = length & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, requestId);\n  _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n  _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n  _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n  _buffer[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, OP_KILL_CURSORS);\n  _buffer[index + 3] = (opcodes.OP_KILL_CURSORS >> 24) & 0xff;\n  _buffer[index + 2] = (opcodes.OP_KILL_CURSORS >> 16) & 0xff;\n  _buffer[index + 1] = (opcodes.OP_KILL_CURSORS >> 8) & 0xff;\n  _buffer[index] = opcodes.OP_KILL_CURSORS & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write batch size\n  // index = write32bit(index, _buffer, this.cursorIds.length);\n  _buffer[index + 3] = (this.cursorIds.length >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorIds.length >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorIds.length >> 8) & 0xff;\n  _buffer[index] = this.cursorIds.length & 0xff;\n  index = index + 4;\n\n  // Write all the cursor ids into the array\n  for (var i = 0; i < this.cursorIds.length; i++) {\n    // Write cursor id\n    // index = write32bit(index, _buffer, cursorIds[i].getLowBits());\n    _buffer[index + 3] = (this.cursorIds[i].getLowBits() >> 24) & 0xff;\n    _buffer[index + 2] = (this.cursorIds[i].getLowBits() >> 16) & 0xff;\n    _buffer[index + 1] = (this.cursorIds[i].getLowBits() >> 8) & 0xff;\n    _buffer[index] = this.cursorIds[i].getLowBits() & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, cursorIds[i].getHighBits());\n    _buffer[index + 3] = (this.cursorIds[i].getHighBits() >> 24) & 0xff;\n    _buffer[index + 2] = (this.cursorIds[i].getHighBits() >> 16) & 0xff;\n    _buffer[index + 1] = (this.cursorIds[i].getHighBits() >> 8) & 0xff;\n    _buffer[index] = this.cursorIds[i].getHighBits() & 0xff;\n    index = index + 4;\n  }\n\n  // Return buffer\n  return _buffer;\n};\n\nvar Response = function(bson, message, msgHeader, msgBody, opts) {\n  opts = opts || { promoteLongs: true, promoteValues: true, promoteBuffers: false };\n  this.parsed = false;\n  this.raw = message;\n  this.data = msgBody;\n  this.bson = bson;\n  this.opts = opts;\n\n  // Read the message header\n  this.length = msgHeader.length;\n  this.requestId = msgHeader.requestId;\n  this.responseTo = msgHeader.responseTo;\n  this.opCode = msgHeader.opCode;\n  this.fromCompressed = msgHeader.fromCompressed;\n\n  // Read the message body\n  this.responseFlags = msgBody.readInt32LE(0);\n  this.cursorId = new Long(msgBody.readInt32LE(4), msgBody.readInt32LE(8));\n  this.startingFrom = msgBody.readInt32LE(12);\n  this.numberReturned = msgBody.readInt32LE(16);\n\n  // Preallocate document array\n  this.documents = new Array(this.numberReturned);\n\n  // Flag values\n  this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n  this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n  this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n  this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n  this.promoteLongs = typeof opts.promoteLongs === 'boolean' ? opts.promoteLongs : true;\n  this.promoteValues = typeof opts.promoteValues === 'boolean' ? opts.promoteValues : true;\n  this.promoteBuffers = typeof opts.promoteBuffers === 'boolean' ? opts.promoteBuffers : false;\n};\n\nResponse.prototype.isParsed = function() {\n  return this.parsed;\n};\n\nResponse.prototype.parse = function(options) {\n  // Don't parse again if not needed\n  if (this.parsed) return;\n  options = options || {};\n\n  // Allow the return of raw documents instead of parsing\n  var raw = options.raw || false;\n  var documentsReturnedIn = options.documentsReturnedIn || null;\n  var promoteLongs =\n    typeof options.promoteLongs === 'boolean' ? options.promoteLongs : this.opts.promoteLongs;\n  var promoteValues =\n    typeof options.promoteValues === 'boolean' ? options.promoteValues : this.opts.promoteValues;\n  var promoteBuffers =\n    typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : this.opts.promoteBuffers;\n  var bsonSize, _options;\n\n  // Set up the options\n  _options = {\n    promoteLongs: promoteLongs,\n    promoteValues: promoteValues,\n    promoteBuffers: promoteBuffers\n  };\n\n  // Position within OP_REPLY at which documents start\n  // (See https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n  this.index = 20;\n\n  //\n  // Parse Body\n  //\n  for (var i = 0; i < this.numberReturned; i++) {\n    bsonSize =\n      this.data[this.index] |\n      (this.data[this.index + 1] << 8) |\n      (this.data[this.index + 2] << 16) |\n      (this.data[this.index + 3] << 24);\n\n    // If we have raw results specified slice the return document\n    if (raw) {\n      this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n    } else {\n      this.documents[i] = this.bson.deserialize(\n        this.data.slice(this.index, this.index + bsonSize),\n        _options\n      );\n    }\n\n    // Adjust the index\n    this.index = this.index + bsonSize;\n  }\n\n  if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n    const fieldsAsRaw = {};\n    fieldsAsRaw[documentsReturnedIn] = true;\n    _options.fieldsAsRaw = fieldsAsRaw;\n\n    const doc = this.bson.deserialize(this.documents[0], _options);\n    this.documents = [doc];\n  }\n\n  // Set parsed\n  this.parsed = true;\n};\n\nmodule.exports = {\n  Query: Query,\n  GetMore: GetMore,\n  Response: Response,\n  KillCursor: KillCursor\n};\n"]},"metadata":{},"sourceType":"script"}