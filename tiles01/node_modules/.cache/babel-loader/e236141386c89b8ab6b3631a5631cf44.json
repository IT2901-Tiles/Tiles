{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\karen\\\\bacheloroppgaven\\\\Tiles\\\\tiles01\\\\src\\\\Components\\\\AudioAnimations.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport vibrateSound from '../Audio/feedback/synth-vibe.wav';\nimport dropSound from '../Audio/feedback/goblin-fall.mp3'; // Adding sounds to the different animations provided in AnimationsPage.jsx\n\nfunction AudioAnimations(props) {\n  _s();\n\n  const [triggerCard] = useState(props.triggerCard); // props to pass to AnimationsPreview.jsx\n\n  const [thingCard] = useState(props.thingCard); // props to pass to AnimationsPreview.jsx\n\n  const [feedbackCard] = useState(props.feedbackCard); // props to pass to AnimationsPreview.jsx\n\n  var srcForSound;\n  var audioType = 'audio/'; // Check which cards are picked by the user, and match the audio with each card (that has audio associated to it)\n\n  function matchAudioToCards() {\n    if (feedbackCard === 'vibrate') {\n      return [vibrateSound, 'wav'];\n    } else if (triggerCard === 'drop') {\n      return [dropSound, 'mp3'];\n    }\n  }\n\n  function playAudio() {\n    let player = document.getElementById('animationAudio');\n    return player.play();\n  }\n\n  function pauseAudio() {\n    let player = document.getElementById('animationAudio');\n    return player.pause();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"animationAudio\",\n      autoPlay: true,\n      loop: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: matchAudioToCards[0],\n        type: audioType + matchAudioToCards[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click the buttons to play or pause the audio.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playAudio,\n      type: \"button\",\n      children: \"Play The Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pauseAudio,\n      type: \"button\",\n      children: \"Pause The Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n}\n\n_s(AudioAnimations, \"CjcveqJIEJWbceupU/zq6JURvvE=\");\n\n_c = AudioAnimations;\nexport default AudioAnimations;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioAnimations\");","map":{"version":3,"sources":["C:/Users/karen/bacheloroppgaven/Tiles/tiles01/src/Components/AudioAnimations.jsx"],"names":["React","useState","vibrateSound","dropSound","AudioAnimations","props","triggerCard","thingCard","feedbackCard","srcForSound","audioType","matchAudioToCards","playAudio","player","document","getElementById","play","pauseAudio","pause"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,SAAP,MAAsB,mCAAtB,C,CAEA;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC5B,QAAM,CAACC,WAAD,IAAgBL,QAAQ,CAACI,KAAK,CAACC,WAAP,CAA9B,CAD4B,CACsB;;AAClD,QAAM,CAACC,SAAD,IAAcN,QAAQ,CAACI,KAAK,CAACE,SAAP,CAA5B,CAF4B,CAEkB;;AAC9C,QAAM,CAACC,YAAD,IAAiBP,QAAQ,CAACI,KAAK,CAACG,YAAP,CAA/B,CAH4B,CAGwB;;AACpD,MAAIC,WAAJ;AACA,MAAIC,SAAS,GAAG,QAAhB,CAL4B,CAO5B;;AACA,WAASC,iBAAT,GAA6B;AACzB,QAAIH,YAAY,KAAK,SAArB,EAAgC;AAC5B,aAAO,CAACN,YAAD,EAAe,KAAf,CAAP;AACH,KAFD,MAEO,IAAII,WAAW,KAAK,MAApB,EAA4B;AAC/B,aAAO,CAACH,SAAD,EAAY,KAAZ,CAAP;AACH;AACJ;;AAED,WAASS,SAAT,GAAqB;AACjB,QAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAb;AACA,WAAOF,MAAM,CAACG,IAAP,EAAP;AACH;;AAED,WAASC,UAAT,GAAsB;AAClB,QAAIJ,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAb;AACA,WAAOF,MAAM,CAACK,KAAP,EAAP;AACH;;AACD,sBACQ;AAAA,4BAWA;AAAO,MAAA,EAAE,EAAC,gBAAV;AAA2B,MAAA,QAAQ,MAAnC;AAAoC,MAAA,IAAI,MAAxC;AAAA,6BACI;AAAQ,QAAA,GAAG,EAAEP,iBAAiB,CAAC,CAAD,CAA9B;AAAmC,QAAA,IAAI,EAAED,SAAS,GAAGC,iBAAiB,CAAC,CAAD;AAAtE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXA,eAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdA,eAiBA;AAAQ,MAAA,OAAO,EAAEC,SAAjB;AAA4B,MAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBA,eAkBA;AAAQ,MAAA,OAAO,EAAEK,UAAjB;AAA6B,MAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAsBH;;GA/CQb,e;;KAAAA,e;AAiDT,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport vibrateSound from '../Audio/feedback/synth-vibe.wav'\r\nimport dropSound from '../Audio/feedback/goblin-fall.mp3'\r\n\r\n// Adding sounds to the different animations provided in AnimationsPage.jsx\r\nfunction AudioAnimations(props) {\r\n    const [triggerCard] = useState(props.triggerCard) // props to pass to AnimationsPreview.jsx\r\n    const [thingCard] = useState(props.thingCard) // props to pass to AnimationsPreview.jsx\r\n    const [feedbackCard] = useState(props.feedbackCard) // props to pass to AnimationsPreview.jsx\r\n    var srcForSound;\r\n    var audioType = 'audio/'\r\n\r\n    // Check which cards are picked by the user, and match the audio with each card (that has audio associated to it)\r\n    function matchAudioToCards() {\r\n        if (feedbackCard === 'vibrate') {\r\n            return [vibrateSound, 'wav'] \r\n        } else if (triggerCard === 'drop') {\r\n            return [dropSound, 'mp3']\r\n        }\r\n    }\r\n\r\n    function playAudio() {\r\n        let player = document.getElementById('animationAudio');\r\n        return player.play();\r\n    }\r\n\r\n    function pauseAudio() {\r\n        let player = document.getElementById('animationAudio');\r\n        return player.pause();\r\n    }\r\n    return (\r\n            <div>\r\n                {/* <audio controls autoPlay loop> \r\n                <source src={matchAudioToCards()[0]} type={audioType + matchAudioToCards()[1]}/>\r\n            </audio>\r\n                <audio id=\"funnydummy\" src={matchAudioToCards()[0]}>\r\n                </audio>\r\n                <div>\r\n                    <button onclick={playAudio}>Play</button>\r\n                    <button onclick=\"document.getElementById('player').pause()\">Pause</button>\r\n                    <button onclick=\"document.getElementById('player').muted=!document.getElementById('player').muted\">Mute/ Unmute</button>\r\n            </div> */}\r\n            <audio id=\"animationAudio\" autoPlay loop>\r\n                <source src={matchAudioToCards[0]} type={audioType + matchAudioToCards[1]}/>\r\n            </audio>\r\n            <p>\r\n                Click the buttons to play or pause the audio.\r\n            </p>\r\n            <button onClick={playAudio} type=\"button\">Play The Audio</button>\r\n            <button onClick={pauseAudio} type=\"button\">Pause The Audio</button>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default AudioAnimations;"]},"metadata":{},"sourceType":"module"}