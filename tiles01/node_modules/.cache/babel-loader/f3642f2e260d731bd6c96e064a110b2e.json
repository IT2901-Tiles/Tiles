{"ast":null,"code":"'use strict';\n\nconst Aspect = require('./operation').Aspect;\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst CommandOperationV2 = require('./command_v2');\n\nconst serverType = require('../core/sdam/common').serverType;\n\nconst ServerType = require('../core/sdam/common').ServerType;\n\nconst MongoError = require('../core').MongoError;\n\nclass ReIndexOperation extends CommandOperationV2 {\n  constructor(collection, options) {\n    super(collection, options);\n    this.collectionName = collection.collectionName;\n  }\n\n  execute(server, callback) {\n    if (serverType(server) !== ServerType.Standalone) {\n      callback(new MongoError(`reIndex can only be executed on standalone servers.`));\n      return;\n    }\n\n    super.executeCommand(server, {\n      reIndex: this.collectionName\n    }, (err, result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(null, !!result.ok);\n    });\n  }\n\n}\n\ndefineAspects(ReIndexOperation, [Aspect.EXECUTE_WITH_SELECTION]);\nmodule.exports = ReIndexOperation;","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/mongodb/lib/operations/re_index.js"],"names":["Aspect","require","defineAspects","CommandOperationV2","serverType","ServerType","MongoError","ReIndexOperation","constructor","collection","options","collectionName","execute","server","callback","Standalone","executeCommand","reIndex","err","result","ok","EXECUTE_WITH_SELECTION","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAAtC;;AACA,MAAME,aAAa,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,aAA7C;;AACA,MAAMC,kBAAkB,GAAGF,OAAO,CAAC,cAAD,CAAlC;;AACA,MAAMG,UAAU,GAAGH,OAAO,CAAC,qBAAD,CAAP,CAA+BG,UAAlD;;AACA,MAAMC,UAAU,GAAGJ,OAAO,CAAC,qBAAD,CAAP,CAA+BI,UAAlD;;AACA,MAAMC,UAAU,GAAGL,OAAO,CAAC,SAAD,CAAP,CAAmBK,UAAtC;;AAEA,MAAMC,gBAAN,SAA+BJ,kBAA/B,CAAkD;AAChDK,EAAAA,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsB;AAC/B,UAAMD,UAAN,EAAkBC,OAAlB;AACA,SAAKC,cAAL,GAAsBF,UAAU,CAACE,cAAjC;AACD;;AAEDC,EAAAA,OAAO,CAACC,MAAD,EAASC,QAAT,EAAmB;AACxB,QAAIV,UAAU,CAACS,MAAD,CAAV,KAAuBR,UAAU,CAACU,UAAtC,EAAkD;AAChDD,MAAAA,QAAQ,CAAC,IAAIR,UAAJ,CAAgB,qDAAhB,CAAD,CAAR;AACA;AACD;;AACD,UAAMU,cAAN,CAAqBH,MAArB,EAA6B;AAAEI,MAAAA,OAAO,EAAE,KAAKN;AAAhB,KAA7B,EAA+D,CAACO,GAAD,EAAMC,MAAN,KAAiB;AAC9E,UAAID,GAAJ,EAAS;AACPJ,QAAAA,QAAQ,CAACI,GAAD,CAAR;AACA;AACD;;AACDJ,MAAAA,QAAQ,CAAC,IAAD,EAAO,CAAC,CAACK,MAAM,CAACC,EAAhB,CAAR;AACD,KAND;AAOD;;AAlB+C;;AAqBlDlB,aAAa,CAACK,gBAAD,EAAmB,CAACP,MAAM,CAACqB,sBAAR,CAAnB,CAAb;AAEAC,MAAM,CAACC,OAAP,GAAiBhB,gBAAjB","sourcesContent":["'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst CommandOperationV2 = require('./command_v2');\nconst serverType = require('../core/sdam/common').serverType;\nconst ServerType = require('../core/sdam/common').ServerType;\nconst MongoError = require('../core').MongoError;\n\nclass ReIndexOperation extends CommandOperationV2 {\n  constructor(collection, options) {\n    super(collection, options);\n    this.collectionName = collection.collectionName;\n  }\n\n  execute(server, callback) {\n    if (serverType(server) !== ServerType.Standalone) {\n      callback(new MongoError(`reIndex can only be executed on standalone servers.`));\n      return;\n    }\n    super.executeCommand(server, { reIndex: this.collectionName }, (err, result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      callback(null, !!result.ok);\n    });\n  }\n}\n\ndefineAspects(ReIndexOperation, [Aspect.EXECUTE_WITH_SELECTION]);\n\nmodule.exports = ReIndexOperation;\n"]},"metadata":{},"sourceType":"script"}