{"ast":null,"code":"'use strict';\n\nconst handleCallback = require('../utils').handleCallback;\n\nconst OperationBase = require('./operation').OperationBase;\n\nconst toError = require('../utils').toError;\n\nconst Aspect = require('./operation').Aspect;\n\nconst defineAspects = require('./operation').defineAspects;\n\nclass FindOneOperation extends OperationBase {\n  constructor(collection, query, options) {\n    super(options);\n    this.collection = collection;\n    this.query = query;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const query = this.query;\n    const options = this.options;\n\n    try {\n      const cursor = coll.find(query, options).limit(-1).batchSize(1); // Return the item\n\n      cursor.next((err, item) => {\n        if (err != null) return handleCallback(callback, toError(err), null);\n        handleCallback(callback, null, item);\n      });\n    } catch (e) {\n      callback(e);\n    }\n  }\n\n}\n\ndefineAspects(FindOneOperation, [Aspect.EXPLAINABLE]);\nmodule.exports = FindOneOperation;","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/mongodb/lib/operations/find_one.js"],"names":["handleCallback","require","OperationBase","toError","Aspect","defineAspects","FindOneOperation","constructor","collection","query","options","execute","callback","coll","cursor","find","limit","batchSize","next","err","item","e","EXPLAINABLE","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBD,cAA3C;;AACA,MAAME,aAAa,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,aAA7C;;AACA,MAAMC,OAAO,GAAGF,OAAO,CAAC,UAAD,CAAP,CAAoBE,OAApC;;AACA,MAAMC,MAAM,GAAGH,OAAO,CAAC,aAAD,CAAP,CAAuBG,MAAtC;;AACA,MAAMC,aAAa,GAAGJ,OAAO,CAAC,aAAD,CAAP,CAAuBI,aAA7C;;AAEA,MAAMC,gBAAN,SAA+BJ,aAA/B,CAA6C;AAC3CK,EAAAA,WAAW,CAACC,UAAD,EAAaC,KAAb,EAAoBC,OAApB,EAA6B;AACtC,UAAMA,OAAN;AAEA,SAAKF,UAAL,GAAkBA,UAAlB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAEDE,EAAAA,OAAO,CAACC,QAAD,EAAW;AAChB,UAAMC,IAAI,GAAG,KAAKL,UAAlB;AACA,UAAMC,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMC,OAAO,GAAG,KAAKA,OAArB;;AAEA,QAAI;AACF,YAAMI,MAAM,GAAGD,IAAI,CAChBE,IADY,CACPN,KADO,EACAC,OADA,EAEZM,KAFY,CAEN,CAAC,CAFK,EAGZC,SAHY,CAGF,CAHE,CAAf,CADE,CAMF;;AACAH,MAAAA,MAAM,CAACI,IAAP,CAAY,CAACC,GAAD,EAAMC,IAAN,KAAe;AACzB,YAAID,GAAG,IAAI,IAAX,EAAiB,OAAOnB,cAAc,CAACY,QAAD,EAAWT,OAAO,CAACgB,GAAD,CAAlB,EAAyB,IAAzB,CAArB;AACjBnB,QAAAA,cAAc,CAACY,QAAD,EAAW,IAAX,EAAiBQ,IAAjB,CAAd;AACD,OAHD;AAID,KAXD,CAWE,OAAOC,CAAP,EAAU;AACVT,MAAAA,QAAQ,CAACS,CAAD,CAAR;AACD;AACF;;AA3B0C;;AA8B7ChB,aAAa,CAACC,gBAAD,EAAmB,CAACF,MAAM,CAACkB,WAAR,CAAnB,CAAb;AAEAC,MAAM,CAACC,OAAP,GAAiBlB,gBAAjB","sourcesContent":["'use strict';\n\nconst handleCallback = require('../utils').handleCallback;\nconst OperationBase = require('./operation').OperationBase;\nconst toError = require('../utils').toError;\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\n\nclass FindOneOperation extends OperationBase {\n  constructor(collection, query, options) {\n    super(options);\n\n    this.collection = collection;\n    this.query = query;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const query = this.query;\n    const options = this.options;\n\n    try {\n      const cursor = coll\n        .find(query, options)\n        .limit(-1)\n        .batchSize(1);\n\n      // Return the item\n      cursor.next((err, item) => {\n        if (err != null) return handleCallback(callback, toError(err), null);\n        handleCallback(callback, null, item);\n      });\n    } catch (e) {\n      callback(e);\n    }\n  }\n}\n\ndefineAspects(FindOneOperation, [Aspect.EXPLAINABLE]);\n\nmodule.exports = FindOneOperation;\n"]},"metadata":{},"sourceType":"script"}