{"ast":null,"code":"'use strict';\n\nconst CommandOperationV2 = require('./command_v2');\n\nconst Aspect = require('./operation').Aspect;\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst maxWireVersion = require('../core/utils').maxWireVersion;\n\nconst LIST_INDEXES_WIRE_VERSION = 3;\n\nclass ListIndexesOperation extends CommandOperationV2 {\n  constructor(collection, options) {\n    super(collection, options, {\n      fullResponse: true\n    });\n    this.collectionNamespace = collection.s.namespace;\n  }\n\n  execute(server, callback) {\n    const serverWireVersion = maxWireVersion(server);\n\n    if (serverWireVersion < LIST_INDEXES_WIRE_VERSION) {\n      const systemIndexesNS = this.collectionNamespace.withCollection('system.indexes').toString();\n      const collectionNS = this.collectionNamespace.toString();\n      server.query(systemIndexesNS, {\n        query: {\n          ns: collectionNS\n        }\n      }, {}, this.options, callback);\n      return;\n    }\n\n    const cursor = this.options.batchSize ? {\n      batchSize: this.options.batchSize\n    } : {};\n    super.executeCommand(server, {\n      listIndexes: this.collectionNamespace.collection,\n      cursor\n    }, callback);\n  }\n\n}\n\ndefineAspects(ListIndexesOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXECUTE_WITH_SELECTION]);\nmodule.exports = ListIndexesOperation;","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/mongodb/lib/operations/list_indexes.js"],"names":["CommandOperationV2","require","Aspect","defineAspects","maxWireVersion","LIST_INDEXES_WIRE_VERSION","ListIndexesOperation","constructor","collection","options","fullResponse","collectionNamespace","s","namespace","execute","server","callback","serverWireVersion","systemIndexesNS","withCollection","toString","collectionNS","query","ns","cursor","batchSize","executeCommand","listIndexes","READ_OPERATION","RETRYABLE","EXECUTE_WITH_SELECTION","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,cAAD,CAAlC;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,MAAtC;;AACA,MAAMC,aAAa,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBE,aAA7C;;AACA,MAAMC,cAAc,GAAGH,OAAO,CAAC,eAAD,CAAP,CAAyBG,cAAhD;;AAEA,MAAMC,yBAAyB,GAAG,CAAlC;;AAEA,MAAMC,oBAAN,SAAmCN,kBAAnC,CAAsD;AACpDO,EAAAA,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsB;AAC/B,UAAMD,UAAN,EAAkBC,OAAlB,EAA2B;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAA3B;AAEA,SAAKC,mBAAL,GAA2BH,UAAU,CAACI,CAAX,CAAaC,SAAxC;AACD;;AAEDC,EAAAA,OAAO,CAACC,MAAD,EAASC,QAAT,EAAmB;AACxB,UAAMC,iBAAiB,GAAGb,cAAc,CAACW,MAAD,CAAxC;;AACA,QAAIE,iBAAiB,GAAGZ,yBAAxB,EAAmD;AACjD,YAAMa,eAAe,GAAG,KAAKP,mBAAL,CAAyBQ,cAAzB,CAAwC,gBAAxC,EAA0DC,QAA1D,EAAxB;AACA,YAAMC,YAAY,GAAG,KAAKV,mBAAL,CAAyBS,QAAzB,EAArB;AAEAL,MAAAA,MAAM,CAACO,KAAP,CAAaJ,eAAb,EAA8B;AAAEI,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAEF;AAAN;AAAT,OAA9B,EAA+D,EAA/D,EAAmE,KAAKZ,OAAxE,EAAiFO,QAAjF;AACA;AACD;;AAED,UAAMQ,MAAM,GAAG,KAAKf,OAAL,CAAagB,SAAb,GAAyB;AAAEA,MAAAA,SAAS,EAAE,KAAKhB,OAAL,CAAagB;AAA1B,KAAzB,GAAiE,EAAhF;AACA,UAAMC,cAAN,CACEX,MADF,EAEE;AAAEY,MAAAA,WAAW,EAAE,KAAKhB,mBAAL,CAAyBH,UAAxC;AAAoDgB,MAAAA;AAApD,KAFF,EAGER,QAHF;AAKD;;AAvBmD;;AA0BtDb,aAAa,CAACG,oBAAD,EAAuB,CAClCJ,MAAM,CAAC0B,cAD2B,EAElC1B,MAAM,CAAC2B,SAF2B,EAGlC3B,MAAM,CAAC4B,sBAH2B,CAAvB,CAAb;AAMAC,MAAM,CAACC,OAAP,GAAiB1B,oBAAjB","sourcesContent":["'use strict';\n\nconst CommandOperationV2 = require('./command_v2');\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst maxWireVersion = require('../core/utils').maxWireVersion;\n\nconst LIST_INDEXES_WIRE_VERSION = 3;\n\nclass ListIndexesOperation extends CommandOperationV2 {\n  constructor(collection, options) {\n    super(collection, options, { fullResponse: true });\n\n    this.collectionNamespace = collection.s.namespace;\n  }\n\n  execute(server, callback) {\n    const serverWireVersion = maxWireVersion(server);\n    if (serverWireVersion < LIST_INDEXES_WIRE_VERSION) {\n      const systemIndexesNS = this.collectionNamespace.withCollection('system.indexes').toString();\n      const collectionNS = this.collectionNamespace.toString();\n\n      server.query(systemIndexesNS, { query: { ns: collectionNS } }, {}, this.options, callback);\n      return;\n    }\n\n    const cursor = this.options.batchSize ? { batchSize: this.options.batchSize } : {};\n    super.executeCommand(\n      server,\n      { listIndexes: this.collectionNamespace.collection, cursor },\n      callback\n    );\n  }\n}\n\ndefineAspects(ListIndexesOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION\n]);\n\nmodule.exports = ListIndexesOperation;\n"]},"metadata":{},"sourceType":"script"}