{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\StuartGO\\\\projects\\\\bachelorOppgave\\\\Tiles\\\\tiles01\\\\src\\\\Components\\\\FormFieldAnimationPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nfunction FormFieldAnimationPage() {\n  _s();\n\n  const [input, setInput] = useState(''); // The following function gathers the content from the textarea and inserts it into a external txt-file\n\n  function downloadFile() {\n    if (input === '') {\n      alert(\"No text found\");\n    } else {\n      const htmlElement = document.createElement(\"a\");\n      const valueInput = new Blob([document.getElementById(\"textBoxAnimationPage\").value], {\n        type: 'text/plain'\n      });\n      htmlElement.href = URL.createObjectURL(valueInput);\n      htmlElement.download = \"tiles.txt\";\n      document.body.appendChild(htmlElement);\n      htmlElement.click();\n    }\n  } // Will fix the position when the animations are ready\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"textAreaAnimationPage\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Your idea:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"textBoxAnimationPage\",\n        onChange: newInput => setInput(newInput.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadFile,\n        className: \"textButtonAnimationPage\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormFieldAnimationPage, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n\n_c = FormFieldAnimationPage;\nexport default FormFieldAnimationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormFieldAnimationPage\");","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/src/Components/FormFieldAnimationPage.jsx"],"names":["React","useState","FormFieldAnimationPage","input","setInput","downloadFile","alert","htmlElement","document","createElement","valueInput","Blob","getElementById","value","type","href","URL","createObjectURL","download","body","appendChild","click","newInput","target"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,SAASC,sBAAT,GAAkC;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC,CAD8B,CAG9B;;AACA,WAASI,YAAT,GAAwB;AACpB,QAAIF,KAAK,KAAK,EAAd,EAAiB;AACbG,MAAAA,KAAK,CAAC,eAAD,CAAL;AACH,KAFD,MAEO;AACH,YAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAApB;AACA,YAAMC,UAAU,GAAG,IAAIC,IAAJ,CAAS,CAACH,QAAQ,CAACI,cAAT,CAAwB,sBAAxB,EAAgDC,KAAjD,CAAT,EAAkE;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAlE,CAAnB;AACAP,MAAAA,WAAW,CAACQ,IAAZ,GAAmBC,GAAG,CAACC,eAAJ,CAAoBP,UAApB,CAAnB;AACAH,MAAAA,WAAW,CAACW,QAAZ,GAAuB,WAAvB;AACAV,MAAAA,QAAQ,CAACW,IAAT,CAAcC,WAAd,CAA0Bb,WAA1B;AACAA,MAAAA,WAAW,CAACc,KAAZ;AACH;AACJ,GAf6B,CAiB9B;;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,2BACI;AAAA,4CACI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAU,QAAA,EAAE,EAAC,sBAAb;AAAoC,QAAA,QAAQ,EAAEC,QAAQ,IAAIlB,QAAQ,CAACkB,QAAQ,CAACC,MAAT,CAAgBV,KAAjB;AAAlE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAER,YAAjB;AAA+B,QAAA,SAAS,EAAC,yBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA5BQH,sB;;KAAAA,sB;AA8BT,eAAeA,sBAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nfunction FormFieldAnimationPage() {\r\n    const [input, setInput] = useState('')\r\n\r\n    // The following function gathers the content from the textarea and inserts it into a external txt-file\r\n    function downloadFile() {\r\n        if (input === ''){\r\n            alert(\"No text found\")\r\n        } else {\r\n            const htmlElement = document.createElement(\"a\")\r\n            const valueInput = new Blob([document.getElementById(\"textBoxAnimationPage\").value], {type: 'text/plain'})\r\n            htmlElement.href = URL.createObjectURL(valueInput)\r\n            htmlElement.download = \"tiles.txt\"\r\n            document.body.appendChild(htmlElement)\r\n            htmlElement.click()\r\n        }\r\n    }\r\n\r\n    // Will fix the position when the animations are ready\r\n    return (\r\n        <div className=\"textAreaAnimationPage\">\r\n            <label>Your idea:\r\n                <br/>\r\n                <textarea id=\"textBoxAnimationPage\" onChange={newInput => setInput(newInput.target.value)}/>\r\n                <br/>\r\n                <button onClick={downloadFile} className=\"textButtonAnimationPage\">Save</button>\r\n                </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormFieldAnimationPage"]},"metadata":{},"sourceType":"module"}