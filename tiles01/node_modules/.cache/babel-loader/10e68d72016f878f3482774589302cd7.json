{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\karen\\\\bacheloroppgaven\\\\Tiles\\\\tiles01\\\\src\\\\Pages\\\\ChosenCardsPage.jsx\";\nimport React from 'react';\nimport LinkButton from '../Components/LinkButton';\nimport placeholderImage from '../images/blankImg.png';\nimport TopContainer from '../Components/TopContainer';\nimport LinkToPage from '../Components/LinkToPage';\nimport Character from '../Components/Character';\nimport CharNormal from '../Components/CharNormal';\n\nfunction ChosenCardsPage(props) {\n  localStorage.setItem(props.location.state.category, props.location.state.card);\n  let triggerChosen = false;\n  let thingChosen = false;\n  let feedbackChosen = false;\n  let triggerNotChosenId = \"textNoCardChosen1\";\n  let thingNotChosenId = \"textNoCardChosen2\";\n  let feedbackNotChosenId = \"textNoCardChosen3\";\n  let triggerChosenId = \"trigger\";\n  let thingChosenId = \"thing\";\n  let feedbackChosenId = \"feedback\";\n  let errorOccured = false; // value turns true if error occured \n\n  let colorBorder; // color of border and font when no card is picked\n  // This function checks which cards are checked off and sets a bool value\n\n  function CheckCards() {\n    if ((localStorage.getItem(\"trigger\") === \"null\" || localStorage.getItem(\"trigger\") === null) && (localStorage.getItem(\"thing\") === \"null\" || localStorage.getItem(\"thing\") === null) && (localStorage.getItem(\"feedback\") === \"null\" || localStorage.getItem(\"feedback\") === null)) {\n      triggerChosen = false;\n      thingChosen = false;\n      feedbackChosen = false;\n    } else if (!(localStorage.getItem(\"trigger\") === \"null\" || localStorage.getItem(\"trigger\") === null) && (localStorage.getItem(\"thing\") === \"null\" || localStorage.getItem(\"thing\") === null) && (localStorage.getItem(\"feedback\") === \"null\" || localStorage.getItem(\"feedback\") === null)) {\n      triggerChosen = true;\n      thingChosen = false;\n      feedbackChosen = false;\n    } else if (!(localStorage.getItem(\"trigger\") === \"null\" || localStorage.getItem(\"trigger\") === null) && !(localStorage.getItem(\"thing\") === \"null\" || localStorage.getItem(\"thing\") === null) && (localStorage.getItem(\"feedback\") === \"null\" || localStorage.getItem(\"feedback\") === null)) {\n      triggerChosen = true;\n      thingChosen = true;\n      feedbackChosen = false;\n    } else if (!(localStorage.getItem(\"trigger\") === \"null\" || localStorage.getItem(\"trigger\") === null) && !(localStorage.getItem(\"thing\") === \"null\" || localStorage.getItem(\"thing\") === null) && !(localStorage.getItem(\"feedback\") === \"null\" || localStorage.getItem(\"feedback\") === null)) {\n      triggerChosen = true;\n      thingChosen = true;\n      feedbackChosen = true;\n    } else {\n      // if none of the above are true, then errorOccurs variable is set to true and this is used in the return statement\n      errorOccured = true;\n    }\n  } // If bool value is true, then this function is returned. This returns the image and uses the LinkToPage-component\n\n\n  function trueValue(cardType) {\n    if (errorOccured) {\n      // error-solution for now, this will be fixed more professionally later on\n      return /*#__PURE__*/_jsxDEV(LinkButton, {\n        target: \"/categories\",\n        title: cardType.charAt(0).toUpperCase + cardType.substring(1),\n        category: cardType,\n        size: \"Small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this);\n    } else {\n      let cardTypeName = cardType.charAt(0).toUpperCase() + cardType.substring(1);\n      return /*#__PURE__*/_jsxDEV(LinkToPage, {\n        target: \"/categories\",\n        title: cardTypeName,\n        category: cardType,\n        nameOfCardType: localStorage.getItem(cardType),\n        classNameCard: \"chosen\" + cardTypeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    }\n  } // If bool value is false, then this function is returned. This function returns a placeholder image and a button\n\n\n  function falseValue(cardType) {\n    if (errorOccured) {\n      // error-solution for now, this will be fixed\n      return /*#__PURE__*/_jsxDEV(LinkButton, {\n        target: \"/categories\",\n        title: cardType,\n        category: cardType,\n        size: \"Small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }, this);\n    } else {\n      // Checks which type of card it is + sets the color of the border\n      let classNameOfCard;\n\n      if (cardType === triggerChosenId) {\n        classNameOfCard = triggerNotChosenId;\n        colorBorder = \"#F08A00\";\n      } else if (cardType === thingChosenId) {\n        classNameOfCard = thingNotChosenId;\n        colorBorder = \"#E53D2F\";\n      } else if (cardType === feedbackChosenId) {\n        classNameOfCard = feedbackNotChosenId;\n        colorBorder = \"#FFCD00\";\n      } // Returns the placeholder image and button\n      // (fjern kommentar: kanskje litt dårlig navngivning på divene og kanskje unødvendig mange, men ble finest og mest responsivt med 2 diver)\n\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"firstWrapperCardNotChosen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapperCardNotChosen\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: placeholderImage,\n            alt: \"test\",\n            className: \"noImgChosen\",\n            style: {\n              border: `${colorBorder}`,\n              borderStyle: \"solid\",\n              borderWidth: \"0.65vw\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: classNameOfCard,\n            style: {\n              color: `${colorBorder}`\n            },\n            children: classNameOfCard === thingNotChosenId ? cardType.charAt(0).toUpperCase() + cardType.substring(1) + \"s\" : cardType.charAt(0).toUpperCase() + cardType.substring(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 56\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"buttonChosenCardsPage\",\n          children: [cardType === triggerChosenId && !thingChosen && !feedbackChosen ? /*#__PURE__*/_jsxDEV(LinkButton, {\n            target: \"/categories\",\n            title: \"Choose!\",\n            category: \"trigger\",\n            size: \"chosenCards\",\n            className: \"buttonChosenCardsPage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 100\n          }, this) : \"\", cardType === thingChosenId && triggerChosen && !feedbackChosen ? /*#__PURE__*/_jsxDEV(LinkButton, {\n            target: \"/categories\",\n            title: \"Choose!\",\n            category: \"thing\",\n            size: \"chosenCards\",\n            className: \"buttonChosenCardsPage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 97\n          }, this) : \"\", cardType === feedbackChosenId && triggerChosen && thingChosen ? /*#__PURE__*/_jsxDEV(LinkButton, {\n            target: \"/categories\",\n            title: \"Choose!\",\n            category: \"feedback\",\n            size: \"chosenCards\",\n            className: \"buttonChosenCardsPage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 94\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Page ChosenCardsPage\",\n    children: [/*#__PURE__*/_jsxDEV(TopContainer, {\n      text: \"Press the Choose button to select a card from this category!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CharNormal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chosenCardsGrid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chosenCardsGrid2\",\n        children: [CheckCards(), triggerChosen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chosenCardContainer\",\n          children: trueValue(triggerChosenId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 40\n        }, this) : falseValue(triggerChosenId), thingChosen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chosenCardContainer\",\n          children: trueValue(thingChosenId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 38\n        }, this) : falseValue(thingChosenId), feedbackChosen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chosenCardContainer\",\n          children: trueValue(feedbackChosenId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }, this) : falseValue(feedbackChosenId)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LinkButton, {\n      target: \"/animation\",\n      title: \"RUN!\",\n      category: \"animation\",\n      size: \"Large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ChosenCardsPage;\nexport default ChosenCardsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChosenCardsPage\");","map":{"version":3,"sources":["C:/Users/karen/bacheloroppgaven/Tiles/tiles01/src/Pages/ChosenCardsPage.jsx"],"names":["React","LinkButton","placeholderImage","TopContainer","LinkToPage","Character","CharNormal","ChosenCardsPage","props","localStorage","setItem","location","state","category","card","triggerChosen","thingChosen","feedbackChosen","triggerNotChosenId","thingNotChosenId","feedbackNotChosenId","triggerChosenId","thingChosenId","feedbackChosenId","errorOccured","colorBorder","CheckCards","getItem","trueValue","cardType","charAt","toUpperCase","substring","cardTypeName","falseValue","classNameOfCard","border","borderStyle","borderWidth","color"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport LinkButton from '../Components/LinkButton'\r\nimport placeholderImage from '../images/blankImg.png'\r\nimport TopContainer from '../Components/TopContainer'\r\nimport LinkToPage from '../Components/LinkToPage'\r\nimport Character from '../Components/Character'\r\nimport CharNormal from '../Components/CharNormal'\r\n\r\nfunction ChosenCardsPage(props) {\r\n    localStorage.setItem(props.location.state.category, props.location.state.card)\r\n    let triggerChosen = false;\r\n    let thingChosen = false;\r\n    let feedbackChosen = false;\r\n    let triggerNotChosenId = \"textNoCardChosen1\";\r\n    let thingNotChosenId = \"textNoCardChosen2\";\r\n    let feedbackNotChosenId = \"textNoCardChosen3\";\r\n    let triggerChosenId = \"trigger\";\r\n    let thingChosenId = \"thing\";\r\n    let feedbackChosenId = \"feedback\";\r\n    let errorOccured = false; // value turns true if error occured \r\n    let colorBorder; // color of border and font when no card is picked\r\n\r\n    // This function checks which cards are checked off and sets a bool value\r\n    function CheckCards() {\r\n        if ((localStorage.getItem(\"trigger\") === \"null\" || localStorage.getItem(\"trigger\") === null) && (localStorage.getItem(\"thing\") === \"null\" || localStorage.getItem(\"thing\") === null) && (localStorage.getItem(\"feedback\") === \"null\" || localStorage.getItem(\"feedback\") === null)) {\r\n            triggerChosen = false;\r\n            thingChosen = false;\r\n            feedbackChosen = false;\r\n        } else if ((!(localStorage.getItem(\"trigger\") === \"null\" || localStorage.getItem(\"trigger\") === null)) && (localStorage.getItem(\"thing\") === \"null\" || localStorage.getItem(\"thing\") === null) && (localStorage.getItem(\"feedback\") === \"null\" || localStorage.getItem(\"feedback\") === null)) {\r\n            triggerChosen = true;\r\n            thingChosen = false;\r\n            feedbackChosen = false;\r\n        } else if ((!(localStorage.getItem(\"trigger\") === \"null\" || localStorage.getItem(\"trigger\") === null)) && (!(localStorage.getItem(\"thing\") === \"null\" || localStorage.getItem(\"thing\") === null)) && (localStorage.getItem(\"feedback\") === \"null\" || localStorage.getItem(\"feedback\") === null)) {\r\n            triggerChosen = true;\r\n            thingChosen = true;\r\n            feedbackChosen = false;\r\n        } else if ((!(localStorage.getItem(\"trigger\") === \"null\" || localStorage.getItem(\"trigger\") === null)) && (!(localStorage.getItem(\"thing\") === \"null\" || localStorage.getItem(\"thing\") === null)) && (!(localStorage.getItem(\"feedback\") === \"null\" || localStorage.getItem(\"feedback\") === null))) {\r\n            triggerChosen = true;\r\n            thingChosen = true;\r\n            feedbackChosen = true;\r\n        } else {\r\n            // if none of the above are true, then errorOccurs variable is set to true and this is used in the return statement\r\n            errorOccured = true;\r\n        }\r\n    }\r\n\r\n\r\n    // If bool value is true, then this function is returned. This returns the image and uses the LinkToPage-component\r\n    function trueValue(cardType) {\r\n        if (errorOccured) { // error-solution for now, this will be fixed more professionally later on\r\n            return <LinkButton target=\"/categories\" title={cardType.charAt(0).toUpperCase + cardType.substring(1)} category={cardType} size=\"Small\"></LinkButton>\r\n        } else {\r\n            let cardTypeName = cardType.charAt(0).toUpperCase() + cardType.substring(1)\r\n            return <LinkToPage target=\"/categories\" title={cardTypeName} category={cardType} nameOfCardType={localStorage.getItem(cardType)} classNameCard={\"chosen\" + cardTypeName}></LinkToPage>\r\n        }\r\n    }\r\n\r\n    // If bool value is false, then this function is returned. This function returns a placeholder image and a button\r\n    function falseValue(cardType) {\r\n        if (errorOccured) { // error-solution for now, this will be fixed\r\n            return <LinkButton target=\"/categories\" title={cardType} category={cardType} size=\"Small\"></LinkButton>\r\n        } else {\r\n            // Checks which type of card it is + sets the color of the border\r\n            let classNameOfCard;\r\n            if (cardType === triggerChosenId) {\r\n                classNameOfCard = triggerNotChosenId;\r\n                colorBorder = \"#F08A00\";\r\n            } else if (cardType === thingChosenId) {\r\n                classNameOfCard = thingNotChosenId;\r\n                colorBorder = \"#E53D2F\";\r\n            } else if (cardType === feedbackChosenId) {\r\n                classNameOfCard = feedbackNotChosenId;\r\n                colorBorder = \"#FFCD00\";\r\n            }\r\n\r\n            // Returns the placeholder image and button\r\n            // (fjern kommentar: kanskje litt dårlig navngivning på divene og kanskje unødvendig mange, men ble finest og mest responsivt med 2 diver)\r\n            return <div id=\"firstWrapperCardNotChosen\"><div className=\"wrapperCardNotChosen\">\r\n            <img src={placeholderImage} alt=\"test\" className=\"noImgChosen\" style={{ border: `${colorBorder}`, borderStyle: \"solid\", borderWidth: \"0.65vw\" }} />\r\n            <div id={classNameOfCard} style={{ color: `${colorBorder}`}}>\r\n                {classNameOfCard === thingNotChosenId ? cardType.charAt(0).toUpperCase() + cardType.substring(1) + \"s\" : cardType.charAt(0).toUpperCase() + cardType.substring(1)}\r\n                </div>\r\n                <br />\r\n            </div>\r\n                <div id=\"buttonChosenCardsPage\">\r\n                    {/* Following code decides whether button is going to be enabled or not */}\r\n                    {((cardType === triggerChosenId) && (!(thingChosen)) && (!(feedbackChosen))) ? <LinkButton target=\"/categories\" title=\"Choose!\" category=\"trigger\" size=\"chosenCards\" className=\"buttonChosenCardsPage\"></LinkButton> : \"\"}\r\n                    {((cardType === thingChosenId) && (triggerChosen) && (!(feedbackChosen))) ? <LinkButton target=\"/categories\" title=\"Choose!\" category=\"thing\" size=\"chosenCards\" className=\"buttonChosenCardsPage\"></LinkButton> : \"\"}\r\n                    {((cardType === feedbackChosenId) && (triggerChosen) && (thingChosen)) ? <LinkButton target=\"/categories\" title=\"Choose!\" category=\"feedback\" size=\"chosenCards\" className=\"buttonChosenCardsPage\"></LinkButton> : \"\"}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Page ChosenCardsPage\">\r\n\r\n        <TopContainer\r\n            text = \"Press the Choose button to select a card from this category!\"\r\n        />\r\n\r\n        <CharNormal/>\r\n\r\n            <div className=\"chosenCardsGrid\">\r\n                <div className=\"chosenCardsGrid2\">\r\n                    {CheckCards()}\r\n                    {/* If-else statements to check the bool-variables */}\r\n                    {(triggerChosen) ? <div className=\"chosenCardContainer\">{trueValue(triggerChosenId)}</div> : falseValue(triggerChosenId)}\r\n                    {(thingChosen) ? <div className=\"chosenCardContainer\">{trueValue(thingChosenId)}</div> : falseValue(thingChosenId)}\r\n                    {(feedbackChosen) ? <div className=\"chosenCardContainer\">{trueValue(feedbackChosenId)}</div> : falseValue(feedbackChosenId)}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <br />\r\n            <LinkButton target=\"/animation\" title=\"RUN!\" category=\"animation\" size=\"Large\"></LinkButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChosenCardsPage"]},"metadata":{},"sourceType":"module"}