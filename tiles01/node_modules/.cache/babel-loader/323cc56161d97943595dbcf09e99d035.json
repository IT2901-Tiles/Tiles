{"ast":null,"code":"'use strict';\n\nconst Aspect = require('./operation').Aspect;\n\nconst CommandOperation = require('./command');\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst handleCallback = require('../utils').handleCallback;\n\nconst WriteConcern = require('../write_concern');\n\nclass RemoveUserOperation extends CommandOperation {\n  constructor(db, username, options) {\n    const commandOptions = {};\n    const writeConcern = WriteConcern.fromOptions(options);\n\n    if (writeConcern != null) {\n      commandOptions.writeConcern = writeConcern;\n    }\n\n    if (options.dbName) {\n      commandOptions.dbName = options.dbName;\n    } // Add maxTimeMS to options if set\n\n\n    if (typeof options.maxTimeMS === 'number') {\n      commandOptions.maxTimeMS = options.maxTimeMS;\n    }\n\n    super(db, commandOptions);\n    this.username = username;\n  }\n\n  _buildCommand() {\n    const username = this.username; // Build the command to execute\n\n    const command = {\n      dropUser: username\n    };\n    return command;\n  }\n\n  execute(callback) {\n    // Attempt to execute command\n    super.execute((err, result) => {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, err, result.ok ? true : false);\n    });\n  }\n\n}\n\ndefineAspects(RemoveUserOperation, Aspect.WRITE_OPERATION);\nmodule.exports = RemoveUserOperation;","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/mongodb/lib/operations/remove_user.js"],"names":["Aspect","require","CommandOperation","defineAspects","handleCallback","WriteConcern","RemoveUserOperation","constructor","db","username","options","commandOptions","writeConcern","fromOptions","dbName","maxTimeMS","_buildCommand","command","dropUser","execute","callback","err","result","ok","WRITE_OPERATION","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAAtC;;AACA,MAAME,gBAAgB,GAAGD,OAAO,CAAC,WAAD,CAAhC;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBE,aAA7C;;AACA,MAAMC,cAAc,GAAGH,OAAO,CAAC,UAAD,CAAP,CAAoBG,cAA3C;;AACA,MAAMC,YAAY,GAAGJ,OAAO,CAAC,kBAAD,CAA5B;;AAEA,MAAMK,mBAAN,SAAkCJ,gBAAlC,CAAmD;AACjDK,EAAAA,WAAW,CAACC,EAAD,EAAKC,QAAL,EAAeC,OAAf,EAAwB;AACjC,UAAMC,cAAc,GAAG,EAAvB;AAEA,UAAMC,YAAY,GAAGP,YAAY,CAACQ,WAAb,CAAyBH,OAAzB,CAArB;;AACA,QAAIE,YAAY,IAAI,IAApB,EAA0B;AACxBD,MAAAA,cAAc,CAACC,YAAf,GAA8BA,YAA9B;AACD;;AAED,QAAIF,OAAO,CAACI,MAAZ,EAAoB;AAClBH,MAAAA,cAAc,CAACG,MAAf,GAAwBJ,OAAO,CAACI,MAAhC;AACD,KAVgC,CAYjC;;;AACA,QAAI,OAAOJ,OAAO,CAACK,SAAf,KAA6B,QAAjC,EAA2C;AACzCJ,MAAAA,cAAc,CAACI,SAAf,GAA2BL,OAAO,CAACK,SAAnC;AACD;;AAED,UAAMP,EAAN,EAAUG,cAAV;AAEA,SAAKF,QAAL,GAAgBA,QAAhB;AACD;;AAEDO,EAAAA,aAAa,GAAG;AACd,UAAMP,QAAQ,GAAG,KAAKA,QAAtB,CADc,CAGd;;AACA,UAAMQ,OAAO,GAAG;AAAEC,MAAAA,QAAQ,EAAET;AAAZ,KAAhB;AAEA,WAAOQ,OAAP;AACD;;AAEDE,EAAAA,OAAO,CAACC,QAAD,EAAW;AAChB;AACA,UAAMD,OAAN,CAAc,CAACE,GAAD,EAAMC,MAAN,KAAiB;AAC7B,UAAID,GAAJ,EAAS,OAAOjB,cAAc,CAACgB,QAAD,EAAWC,GAAX,EAAgB,IAAhB,CAArB;AACTjB,MAAAA,cAAc,CAACgB,QAAD,EAAWC,GAAX,EAAgBC,MAAM,CAACC,EAAP,GAAY,IAAZ,GAAmB,KAAnC,CAAd;AACD,KAHD;AAID;;AAtCgD;;AAyCnDpB,aAAa,CAACG,mBAAD,EAAsBN,MAAM,CAACwB,eAA7B,CAAb;AAEAC,MAAM,CAACC,OAAP,GAAiBpB,mBAAjB","sourcesContent":["'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst CommandOperation = require('./command');\nconst defineAspects = require('./operation').defineAspects;\nconst handleCallback = require('../utils').handleCallback;\nconst WriteConcern = require('../write_concern');\n\nclass RemoveUserOperation extends CommandOperation {\n  constructor(db, username, options) {\n    const commandOptions = {};\n\n    const writeConcern = WriteConcern.fromOptions(options);\n    if (writeConcern != null) {\n      commandOptions.writeConcern = writeConcern;\n    }\n\n    if (options.dbName) {\n      commandOptions.dbName = options.dbName;\n    }\n\n    // Add maxTimeMS to options if set\n    if (typeof options.maxTimeMS === 'number') {\n      commandOptions.maxTimeMS = options.maxTimeMS;\n    }\n\n    super(db, commandOptions);\n\n    this.username = username;\n  }\n\n  _buildCommand() {\n    const username = this.username;\n\n    // Build the command to execute\n    const command = { dropUser: username };\n\n    return command;\n  }\n\n  execute(callback) {\n    // Attempt to execute command\n    super.execute((err, result) => {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, err, result.ok ? true : false);\n    });\n  }\n}\n\ndefineAspects(RemoveUserOperation, Aspect.WRITE_OPERATION);\n\nmodule.exports = RemoveUserOperation;\n"]},"metadata":{},"sourceType":"script"}