{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Card from\"./Card\";//imports all of the images\nfunction importAll(r){console.log(r);console.log(r.keys());console.log(r.keys().map(r));return r.keys().map(r);}//paths tp where the different image sets are\nvar cardPaths={\"thing\":require.context(\"./../images/things\",false,/\\.(png|jpe?g|svg)$/),\"trigger\":require.context(\"./../images/triggers\",false,/\\.(png|jpe?g|svg)$/),\"feedback\":require.context(\"./../images/feedbacks\",false,/\\.(png|jpe?g|svg)$/)};//props:\n//category: the category of the cardcontainer, used to find the cards\n//onSelect: function to pass selected card to CategoryPage,\n//variables:\n//image: the image file\n//index: the index of the image file in listOfImages\nfunction CardContainer(props){var listOfImages=importAll(cardPaths[props.category]);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),activeCard=_useState2[0],setActiveCard=_useState2[1];//called when a card in the container is clicked, sets the card as active \nfunction handleCardClick(newValue){console.log(newValue);props.onSelect(newValue);setActiveCard(newValue.id);}//gets card name from path\nfunction getName(path){console.log(path.default);var index=path.default.indexOf(\".\");return path.default.slice(14,index);}//map function maps the files imported in listOfImages to Card components\nreturn/*#__PURE__*/_jsx(\"div\",{children:listOfImages.map(function(image,index){return/*#__PURE__*/_jsx(Card,{active:activeCard,name:getName(image),onClick:handleCardClick,id:index,src:image.default},index);})});}export default CardContainer;","map":{"version":3,"sources":["C:/Users/StuartGO/projects/bachelorOppgave/Tiles/tiles01/frontend/src/Components/CardContainer.jsx"],"names":["React","useState","Card","importAll","r","console","log","keys","map","cardPaths","require","context","CardContainer","props","listOfImages","category","activeCard","setActiveCard","handleCardClick","newValue","onSelect","id","getName","path","default","index","indexOf","slice","image"],"mappings":"0NAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA;AACA,QAASC,CAAAA,SAAT,CAAmBC,CAAnB,CAAsB,CAClBC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EACAC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,IAAF,EAAZ,EACAF,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,IAAF,GAASC,GAAT,CAAaJ,CAAb,CAAZ,EACA,MAAOA,CAAAA,CAAC,CAACG,IAAF,GAASC,GAAT,CAAaJ,CAAb,CAAP,CACD,CAEH;AACA,GAAIK,CAAAA,SAAS,CAAC,CACV,QAAQC,OAAO,CAACC,OAAR,CAAgB,oBAAhB,CAAsC,KAAtC,CAA6C,oBAA7C,CADE,CAEV,UAAUD,OAAO,CAACC,OAAR,CAAgB,sBAAhB,CAAwC,KAAxC,CAA+C,oBAA/C,CAFA,CAGV,WAAWD,OAAO,CAACC,OAAR,CAAgB,uBAAhB,CAAyC,KAAzC,CAAgD,oBAAhD,CAHD,CAAd,CAKA;AACA;AACA;AACA;AACA;AACA;AAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC1B,GAAMC,CAAAA,YAAY,CAACX,SAAS,CAACM,SAAS,CAACI,KAAK,CAACE,QAAP,CAAV,CAA5B,CAD0B,cAESd,QAAQ,CAAC,IAAD,CAFjB,wCAEnBe,UAFmB,eAERC,aAFQ,eAI1B;AACA,QAASC,CAAAA,eAAT,CAAyBC,QAAzB,CAAkC,CAC9Bd,OAAO,CAACC,GAAR,CAAYa,QAAZ,EACAN,KAAK,CAACO,QAAN,CAAeD,QAAf,EACAF,aAAa,CAACE,QAAQ,CAACE,EAAV,CAAb,CACH,CACD;AACA,QAASC,CAAAA,OAAT,CAAiBC,IAAjB,CAAsB,CAClBlB,OAAO,CAACC,GAAR,CAAYiB,IAAI,CAACC,OAAjB,EACA,GAAIC,CAAAA,KAAK,CAACF,IAAI,CAACC,OAAL,CAAaE,OAAb,CAAqB,GAArB,CAAV,CACA,MAAOH,CAAAA,IAAI,CAACC,OAAL,CAAaG,KAAb,CAAmB,EAAnB,CAAsBF,KAAtB,CAAP,CACH,CAGD;AACA,mBACI,qBAECX,YAAY,CAACN,GAAb,CAEG,SAACoB,KAAD,CAAOH,KAAP,qBAAkB,KAAC,IAAD,EAAM,MAAM,CAAET,UAAd,CAA0B,IAAI,CAAEM,OAAO,CAACM,KAAD,CAAvC,CAAgD,OAAO,CAAEV,eAAzD,CAA0E,EAAE,CAAEO,KAA9E,CAAiG,GAAG,CAAEG,KAAK,CAACJ,OAA5G,EAA0FC,KAA1F,CAAlB,EAFH,CAFD,EADJ,CASH,CAED,cAAeb,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from \"./Card\"\r\n\r\n//imports all of the images\r\nfunction importAll(r) {\r\n    console.log(r)\r\n    console.log(r.keys())\r\n    console.log(r.keys().map(r))\r\n    return r.keys().map(r);\r\n  }\r\n\r\n//paths tp where the different image sets are\r\nvar cardPaths={\r\n    \"thing\":require.context(\"./../images/things\", false, /\\.(png|jpe?g|svg)$/),\r\n    \"trigger\":require.context(\"./../images/triggers\", false, /\\.(png|jpe?g|svg)$/),\r\n    \"feedback\":require.context(\"./../images/feedbacks\", false, /\\.(png|jpe?g|svg)$/)\r\n}\r\n//props:\r\n//category: the category of the cardcontainer, used to find the cards\r\n//onSelect: function to pass selected card to CategoryPage,\r\n//variables:\r\n//image: the image file\r\n//index: the index of the image file in listOfImages\r\n\r\nfunction CardContainer(props) {\r\n    const listOfImages=importAll(cardPaths[props.category]);\r\n    const [activeCard,setActiveCard] = useState(null);\r\n\r\n    //called when a card in the container is clicked, sets the card as active \r\n    function handleCardClick(newValue){\r\n        console.log(newValue)\r\n        props.onSelect(newValue)\r\n        setActiveCard(newValue.id)\r\n    }\r\n    //gets card name from path\r\n    function getName(path){\r\n        console.log(path.default)\r\n        let index=path.default.indexOf(\".\")\r\n        return path.default.slice(14,index)\r\n    }\r\n\r\n\r\n    //map function maps the files imported in listOfImages to Card components\r\n    return (\r\n        <div>\r\n        \r\n        {listOfImages.map(\r\n            \r\n            (image,index) =>  <Card active={activeCard} name={getName(image)} onClick={handleCardClick} id={index} key={index} src={image.default}  />\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardContainer;"]},"metadata":{},"sourceType":"module"}